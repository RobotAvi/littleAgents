"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–æ–∫ –∏ –ø–æ–µ–∑–¥–æ–∫
–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–µ–∑–¥–æ–∫, –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∏–ª–µ—Ç–æ–≤ –∏ –æ—Ç–µ–ª–µ–π, —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞–º–∏.
"""

import streamlit as st
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..'))

from shared.llm_client import llm_client
from shared.config import Config
from shared.utils import (
    create_streamlit_header, display_metrics, 
    validate_config, async_to_sync
)
from datetime import datetime, timedelta

def main():
    create_streamlit_header(
        "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –ø–æ–µ–∑–¥–æ–∫", 
        "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–æ–∫ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ travel-—Ä–∞—Å—Ö–æ–¥–∞–º–∏"
    )
    
    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    with st.sidebar:
        st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        
        # –¢–∏–ø –ø–æ–µ–∑–¥–∫–∏
        trip_type = st.selectbox(
            "–¢–∏–ø –ø–æ–µ–∑–¥–∫–∏:",
            ["–ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∞", "–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è", "–í—Å—Ç—Ä–µ—á–∞ —Å –∫–ª–∏–µ–Ω—Ç–æ–º", "–û–±—É—á–µ–Ω–∏–µ"],
            index=0
        )
        
        # –ë—é–¥–∂–µ—Ç
        budget_limit = st.number_input("–õ–∏–º–∏—Ç –±—é–¥–∂–µ—Ç–∞ (USD):", min_value=0, value=2000)
        
        # –ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è
        preferences = st.multiselect(
            "–ü—Ä–µ–¥–ø–æ—á—Ç–µ–Ω–∏—è:",
            ["–≠–∫–æ–Ω–æ–º –∫–ª–∞—Å—Å", "–ë–ª–∏–∑–∫–æ –∫ —Ü–µ–Ω—Ç—Ä—É", "Wi-Fi –≤ –æ—Ç–µ–ª–µ", "–ó–∞–≤—Ç—Ä–∞–∫ –≤–∫–ª—é—á–µ–Ω"],
            default=["–≠–∫–æ–Ω–æ–º –∫–ª–∞—Å—Å", "Wi-Fi –≤ –æ—Ç–µ–ª–µ"]
        )
        
        if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", type="primary"):
            st.rerun()
    
    # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    tab1, tab2, tab3, tab4 = st.tabs([
        "üóìÔ∏è –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", "‚úàÔ∏è –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", "üí∞ –†–∞—Å—Ö–æ–¥—ã", "üìã –û—Ç—á–µ—Ç—ã"
    ])
    
    with tab1:
        st.subheader("üóìÔ∏è –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–µ–∑–¥–∫–∏")
        
        # –§–æ—Ä–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–µ–∑–¥–∫–∏
        with st.form("trip_planning"):
            st.subheader("‚ûï –ù–æ–≤–∞—è –ø–æ–µ–∑–¥–∫–∞")
            
            col1, col2 = st.columns(2)
            
            with col1:
                trip_title = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –ø–æ–µ–∑–¥–∫–∏:")
                destination = st.text_input("–ú–µ—Å—Ç–æ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏—è:")
                departure_date = st.date_input("–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
                departure_time = st.time_input("–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:")
                
            with col2:
                trip_purpose = st.text_area("–¶–µ–ª—å –ø–æ–µ–∑–¥–∫–∏:")
                return_date = st.date_input("–î–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è:")
                return_time = st.time_input("–í—Ä–µ–º—è –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è:")
                participants = st.text_input("–£—á–∞—Å—Ç–Ω–∏–∫–∏ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):")
            
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
            st.subheader("–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –ø–æ–µ–∑–¥–∫–µ")
            
            col1, col2 = st.columns(2)
            
            with col1:
                need_visa = st.checkbox("–¢—Ä–µ–±—É–µ—Ç—Å—è –≤–∏–∑–∞")
                need_insurance = st.checkbox("–¢—Ä–µ–±—É–µ—Ç—Å—è —Å—Ç—Ä–∞—Ö–æ–≤–∫–∞")
                
            with col2:
                need_transfer = st.checkbox("–ù—É–∂–µ–Ω —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä")
                need_interpreter = st.checkbox("–ù—É–∂–µ–Ω –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫")
            
            if st.form_submit_button("–°–æ–∑–¥–∞—Ç—å –ø–ª–∞–Ω –ø–æ–µ–∑–¥–∫–∏"):
                if trip_title and destination:
                    st.success(f"–ü–ª–∞–Ω –ø–æ–µ–∑–¥–∫–∏ '{trip_title}' —Å–æ–∑–¥–∞–Ω!")
        
        # –°–ø–∏—Å–æ–∫ –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–µ–∑–¥–æ–∫
        st.subheader("üìÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–µ–∑–¥–∫–∏")
        
        planned_trips = [
            {
                "title": "–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è DevOps",
                "destination": "–ú–æ—Å–∫–≤–∞",
                "dates": "15-17 Jan 2024",
                "status": "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞",
                "budget": "$1,500"
            },
            {
                "title": "–í—Å—Ç—Ä–µ—á–∞ —Å –∫–ª–∏–µ–Ω—Ç–æ–º",
                "destination": "–°–ü–±",
                "dates": "25 Jan 2024",
                "status": "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ",
                "budget": "$800"
            }
        ]
        
        for trip in planned_trips:
            with st.expander(f"‚úàÔ∏è {trip['title']} - {trip['destination']}"):
                col1, col2 = st.columns([2, 1])
                
                with col1:
                    st.markdown(f"**–ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ:** {trip['destination']}")
                    st.markdown(f"**–î–∞—Ç—ã:** {trip['dates']}")
                    st.markdown(f"**–°—Ç–∞—Ç—É—Å:** {trip['status']}")
                    st.markdown(f"**–ë—é–¥–∂–µ—Ç:** {trip['budget']}")
                
                with col2:
                    if st.button(f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", key=f"edit_{trip['title']}"):
                        st.info("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–µ–∑–¥–∫–∏...")
                    if st.button(f"–û—Ç–º–µ–Ω–∏—Ç—å", key=f"cancel_{trip['title']}"):
                        st.warning("–ü–æ–µ–∑–¥–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞")
    
    with tab2:
        st.subheader("‚úàÔ∏è –ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –±–∏–ª–µ—Ç—ã")
        
        # –ü–æ–∏—Å–∫ –∞–≤–∏–∞–±–∏–ª–µ—Ç–æ–≤
        st.subheader("üõ´ –ü–æ–∏—Å–∫ –∞–≤–∏–∞–±–∏–ª–µ—Ç–æ–≤")
        
        with st.form("flight_search"):
            col1, col2, col3 = st.columns(3)
            
            with col1:
                from_city = st.text_input("–û—Ç–∫—É–¥–∞:", value="–ú–æ—Å–∫–≤–∞")
                departure_date_flight = st.date_input("–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏—è:", datetime.now().date())
                
            with col2:
                to_city = st.text_input("–ö—É–¥–∞:", value="–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥")
                return_date_flight = st.date_input("–î–∞—Ç–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–∏—è:")
                
            with col3:
                passengers = st.number_input("–ü–∞—Å—Å–∞–∂–∏—Ä–æ–≤:", min_value=1, value=1)
                class_type = st.selectbox("–ö–ª–∞—Å—Å:", ["–≠–∫–æ–Ω–æ–º", "–ë–∏–∑–Ω–µ—Å", "–ü–µ—Ä–≤—ã–π"])
            
            if st.form_submit_button("üîç –ù–∞–π—Ç–∏ –±–∏–ª–µ—Ç—ã"):
                st.success("–ü–æ–∏—Å–∫ –±–∏–ª–µ—Ç–æ–≤...")
                
                # –°–∏–º—É–ª—è—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞
                flight_options = [
                    {"airline": "–ê—ç—Ä–æ—Ñ–ª–æ—Ç", "time": "08:30-10:15", "price": "$150", "duration": "1—á 45–º"},
                    {"airline": "S7", "time": "14:20-16:05", "price": "$135", "duration": "1—á 45–º"},
                    {"airline": "–ü–æ–±–µ–¥–∞", "time": "19:10-20:55", "price": "$89", "duration": "1—á 45–º"}
                ]
                
                st.subheader("‚úàÔ∏è –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ä–µ–π—Å—ã")
                
                for i, flight in enumerate(flight_options):
                    col1, col2, col3, col4 = st.columns([2, 1, 1, 1])
                    
                    with col1:
                        st.write(f"**{flight['airline']}**")
                        st.write(f"{flight['time']}")
                    with col2:
                        st.write(flight['duration'])
                    with col3:
                        st.write(f"**{flight['price']}**")
                    with col4:
                        if st.button("–í—ã–±—Ä–∞—Ç—å", key=f"select_flight_{i}"):
                            st.success(f"–†–µ–π—Å {flight['airline']} –≤—ã–±—Ä–∞–Ω!")
        
        # –ü–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π
        st.subheader("üè® –ü–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π")
        
        with st.form("hotel_search"):
            col1, col2 = st.columns(2)
            
            with col1:
                hotel_city = st.text_input("–ì–æ—Ä–æ–¥:", value="–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥")
                checkin_date = st.date_input("–ó–∞–µ–∑–¥:")
                
            with col2:
                checkout_date = st.date_input("–í—ã–µ–∑–¥:")
                hotel_guests = st.number_input("–ì–æ—Å—Ç–µ–π:", min_value=1, value=1)
            
            hotel_rating = st.selectbox("–†–µ–π—Ç–∏–Ω–≥ –æ—Ç–µ–ª—è:", ["–õ—é–±–æ–π", "3 –∑–≤–µ–∑–¥—ã+", "4 –∑–≤–µ–∑–¥—ã+", "5 –∑–≤–µ–∑–¥"])
            
            if st.form_submit_button("üîç –ù–∞–π—Ç–∏ –æ—Ç–µ–ª–∏"):
                st.success("–ü–æ–∏—Å–∫ –æ—Ç–µ–ª–µ–π...")
                
                # –°–∏–º—É–ª—è—Ü–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                hotel_options = [
                    {"name": "–ì—Ä–∞–Ω–¥ –û—Ç–µ–ª—å –ï–≤—Ä–æ–ø–∞", "rating": "‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê", "price": "$200/–Ω–æ—á—å", "location": "–¶–µ–Ω—Ç—Ä"},
                    {"name": "Radisson Blu", "rating": "‚≠ê‚≠ê‚≠ê‚≠ê", "price": "$120/–Ω–æ—á—å", "location": "–ù–µ–≤—Å–∫–∏–π –ø—Ä–æ—Å–ø–µ–∫—Ç"},
                    {"name": "Ibis Budget", "rating": "‚≠ê‚≠ê‚≠ê", "price": "$60/–Ω–æ—á—å", "location": "–ú–æ—Å–∫–æ–≤—Å–∫–∏–π —Ä–∞–π–æ–Ω"}
                ]
                
                st.subheader("üè® –ù–∞–π–¥–µ–Ω–Ω—ã–µ –æ—Ç–µ–ª–∏")
                
                for i, hotel in enumerate(hotel_options):
                    col1, col2, col3, col4 = st.columns([2, 1, 1, 1])
                    
                    with col1:
                        st.write(f"**{hotel['name']}**")
                        st.write(hotel['rating'])
                    with col2:
                        st.write(hotel['location'])
                    with col3:
                        st.write(f"**{hotel['price']}**")
                    with col4:
                        if st.button("–í—ã–±—Ä–∞—Ç—å", key=f"select_hotel_{i}"):
                            st.success(f"–û—Ç–µ–ª—å {hotel['name']} –≤—ã–±—Ä–∞–Ω!")
    
    with tab3:
        st.subheader("üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞–º–∏")
        
        # –ë—é–¥–∂–µ—Ç –ø–æ–µ–∑–¥–∫–∏
        st.subheader("üí≥ –ë—é–¥–∂–µ—Ç –ø–æ–µ–∑–¥–∫–∏")
        
        col1, col2, col3, col4 = st.columns(4)
        
        with col1:
            st.metric("–û–±—â–∏–π –±—é–¥–∂–µ—Ç", "$2,000", "")
        with col2:
            st.metric("–ü–æ—Ç—Ä–∞—á–µ–Ω–æ", "$856", "+$156")
        with col3:
            st.metric("–û—Å—Ç–∞—Ç–æ–∫", "$1,144", "-$156")
        with col4:
            st.metric("% –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è", "43%", "+8%")
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞
        st.subheader("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥")
        
        with st.form("add_expense"):
            col1, col2 = st.columns(2)
            
            with col1:
                expense_category = st.selectbox("–ö–∞—Ç–µ–≥–æ—Ä–∏—è:", ["–ê–≤–∏–∞–±–∏–ª–µ—Ç—ã", "–û—Ç–µ–ª—å", "–ü–∏—Ç–∞–Ω–∏–µ", "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", "–ü—Ä–æ—á–µ–µ"])
                expense_amount = st.number_input("–°—É–º–º–∞ (USD):", min_value=0.0, value=0.0)
                
            with col2:
                expense_date = st.date_input("–î–∞—Ç–∞ —Ä–∞—Å—Ö–æ–¥–∞:")
                expense_description = st.text_input("–û–ø–∏—Å–∞–Ω–∏–µ:")
            
            receipt_upload = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç—å —á–µ–∫:", type=['jpg', 'png', 'pdf'])
            
            if st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥"):
                if expense_amount > 0:
                    st.success(f"–†–∞—Å—Ö–æ–¥ ${expense_amount} –¥–æ–±–∞–≤–ª–µ–Ω!")
        
        # –ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤
        st.subheader("üìä –ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤")
        
        expenses = [
            {"date": "2024-01-10", "category": "–ê–≤–∏–∞–±–∏–ª–µ—Ç—ã", "amount": "$300", "description": "–†–µ–π—Å MOW-LED"},
            {"date": "2024-01-10", "category": "–û—Ç–µ–ª—å", "amount": "$240", "description": "2 –Ω–æ—á–∏ –≤ –æ—Ç–µ–ª–µ"},
            {"date": "2024-01-11", "category": "–ü–∏—Ç–∞–Ω–∏–µ", "amount": "$45", "description": "–û–±–µ–¥ –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ"},
            {"date": "2024-01-11", "category": "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", "amount": "$25", "description": "–¢–∞–∫—Å–∏ –∏–∑ –∞—ç—Ä–æ–ø–æ—Ä—Ç–∞"}
        ]
        
        for expense in expenses:
            col1, col2, col3, col4 = st.columns([1, 1, 1, 2])
            
            with col1:
                st.write(expense['date'])
            with col2:
                st.write(expense['category'])
            with col3:
                st.write(f"**{expense['amount']}**")
            with col4:
                st.write(expense['description'])
    
    with tab4:
        st.subheader("üìã –û—Ç—á–µ—Ç—ã –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã")
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
        if st.button("üìä –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç –æ –ø–æ–µ–∑–¥–∫–µ", type="primary"):
            with st.spinner("–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞..."):
                
                trip_data = f"""
                –û—Ç—á–µ—Ç –æ –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–µ:
                
                –¶–µ–ª—å: {trip_type}
                –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: –°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥
                –î–∞—Ç—ã: 10-12 —è–Ω–≤–∞—Ä—è 2024
                –ë—é–¥–∂–µ—Ç: $2,000
                –ü–æ—Ç—Ä–∞—á–µ–Ω–æ: $610
                
                –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã:
                - –ê–≤–∏–∞–±–∏–ª–µ—Ç—ã: $300
                - –û—Ç–µ–ª—å: $240  
                - –ü–∏—Ç–∞–Ω–∏–µ: $45
                - –¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç: $25
                """
                
                @async_to_sync
                async def generate_trip_report():
                    return await llm_client.analyze_text(
                        trip_data,
                        "–°–æ–∑–¥–∞–π –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç –æ –∫–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–µ. "
                        "–í–∫–ª—é—á–∏ –∞–Ω–∞–ª–∏–∑ —Ä–∞—Å—Ö–æ–¥–æ–≤, –¥–æ—Å—Ç–∏–≥–Ω—É—Ç—ã–µ —Ü–µ–ª–∏, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏."
                    )
                
                report = generate_trip_report()
                
                st.subheader("üìÑ –û—Ç—á–µ—Ç –æ –ø–æ–µ–∑–¥–∫–µ")
                st.markdown(report)
        
        # –î–æ–∫—É–º–µ–Ω—Ç—ã
        st.subheader("üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ–µ–∑–¥–∫–∏")
        
        documents = [
            {"name": "–ê–≤–∏–∞–±–∏–ª–µ—Ç—ã", "status": "‚úÖ", "file": "tickets.pdf"},
            {"name": "–ë—Ä–æ–Ω—å –æ—Ç–µ–ª—è", "status": "‚úÖ", "file": "hotel_booking.pdf"},
            {"name": "–°—Ç—Ä–∞—Ö–æ–≤–∫–∞", "status": "‚è≥", "file": "insurance.pdf"},
            {"name": "–û—Ç—á–µ—Ç –æ —Ä–∞—Å—Ö–æ–¥–∞—Ö", "status": "üìù", "file": "expenses.xlsx"}
        ]
        
        for doc in documents:
            col1, col2, col3 = st.columns([2, 1, 1])
            
            with col1:
                st.write(f"üìÑ **{doc['name']}**")
            with col2:
                st.write(doc['status'])
            with col3:
                if st.button("üì•", key=f"download_{doc['name']}"):
                    st.info(f"–°–∫–∞—á–∏–≤–∞–Ω–∏–µ {doc['file']}")

if __name__ == "__main__":
    main()
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π, –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–π –∏ –≤—Å—Ç—Ä–µ—á.
"""

import streamlit as st
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..'))

from shared.llm_client import llm_client
from shared.config import Config
from shared.utils import (
    create_streamlit_header, display_metrics, 
    validate_config, async_to_sync
)
from datetime import datetime, timedelta

def main():
    create_streamlit_header(
        "–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π", 
        "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã—Ö —Å–æ–±—ã—Ç–∏–π –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º–∏"
    )
    
    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    with st.sidebar:
        st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        
        # –¢–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
        event_type = st.selectbox(
            "–¢–∏–ø –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:",
            ["–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è", "–°–µ–º–∏–Ω–∞—Ä", "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤", "–¢–∏–º–±–∏–ª–¥–∏–Ω–≥", "–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è"],
            index=0
        )
        
        # –ë—é–¥–∂–µ—Ç
        budget_range = st.selectbox(
            "–ë—é–¥–∂–µ—Ç:",
            ["–î–æ $1,000", "$1,000-$5,000", "$5,000-$10,000", "–°–≤—ã—à–µ $10,000"],
            index=1
        )
        
        # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        attendees_count = st.number_input("–û–∂–∏–¥–∞–µ–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:", min_value=1, value=50)
        
        if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", type="primary"):
            st.rerun()
    
    # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    tab1, tab2, tab3, tab4 = st.tabs([
        "üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", "üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏", "üìã –ó–∞–¥–∞—á–∏", "üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞"
    ])
    
    with tab1:
        st.subheader("üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
        with st.expander("‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ"):
            with st.form("new_event"):
                col1, col2 = st.columns(2)
                
                with col1:
                    event_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:")
                    event_date = st.date_input("–î–∞—Ç–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:")
                    event_time = st.time_input("–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞:")
                    event_duration = st.number_input("–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (—á–∞—Å—ã):", min_value=0.5, value=2.0, step=0.5)
                
                with col2:
                    event_location = st.text_input("–ú–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:")
                    event_budget = st.number_input("–ë—é–¥–∂–µ—Ç ($):", min_value=0.0, value=2000.0)
                    event_format = st.selectbox("–§–æ—Ä–º–∞—Ç:", ["–û—á–Ω–æ", "–û–Ω–ª–∞–π–Ω", "–ì–∏–±—Ä–∏–¥–Ω—ã–π"])
                    event_capacity = st.number_input("–í–º–µ—Å—Ç–∏–º–æ—Å—Ç—å:", min_value=1, value=100)
                
                event_description = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:")
                event_goals = st.text_area("–¶–µ–ª–∏ –∏ –∑–∞–¥–∞—á–∏:")
                
                if st.form_submit_button("–°–æ–∑–¥–∞—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ"):
                    if event_name and event_date:
                        st.success(f"–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ '{event_name}' —Å–æ–∑–¥–∞–Ω–æ!")
        
        # –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
        st.subheader("üìÜ –ü—Ä–µ–¥—Å—Ç–æ—è—â–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è")
        
        upcoming_events = [
            {
                "name": "Tech Conference 2024",
                "date": "2024-02-15",
                "time": "10:00",
                "location": "–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü-–∑–∞–ª –ê",
                "attendees": 120,
                "status": "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ"
            },
            {
                "name": "Quarterly Review",
                "date": "2024-02-20",
                "time": "14:00",
                "location": "–û—Ñ–∏—Å, –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–Ω–∞—è",
                "attendees": 25,
                "status": "–ì–æ—Ç–æ–≤–æ"
            }
        ]
        
        for event in upcoming_events:
            with st.expander(f"üéØ {event['name']} - {event['date']}"):
                col1, col2 = st.columns([2, 1])
                
                with col1:
                    st.markdown(f"**–î–∞—Ç–∞:** {event['date']} –≤ {event['time']}")
                    st.markdown(f"**–ú–µ—Å—Ç–æ:** {event['location']}")
                    st.markdown(f"**–£—á–∞—Å—Ç–Ω–∏–∫–æ–≤:** {event['attendees']}")
                    st.markdown(f"**–°—Ç–∞—Ç—É—Å:** {event['status']}")
                
                with col2:
                    if st.button(f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", key=f"edit_{event['name']}"):
                        st.info("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è...")
                    if st.button(f"–î–µ—Ç–∞–ª–∏", key=f"details_{event['name']}"):
                        st.info("–ü—Ä–æ—Å–º–æ—Ç—Ä –¥–µ—Ç–∞–ª–µ–π...")
        
        # –®–∞–±–ª–æ–Ω—ã –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
        st.subheader("üìã –®–∞–±–ª–æ–Ω—ã –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π")
        
        templates = {
            "–ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—è": {
                "duration": "8 —á–∞—Å–æ–≤",
                "tasks": ["–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ª–∞", "–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —Å–ø–∏–∫–µ—Ä–æ–≤", "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", "–ö–µ–π—Ç–µ—Ä–∏–Ω–≥"],
                "budget": "$5,000-$15,000"
            },
            "–°–µ–º–∏–Ω–∞—Ä": {
                "duration": "3-4 —á–∞—Å–∞", 
                "tasks": ["–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤", "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–µ—Ä–µ–≥–æ–≤–æ—Ä–Ω–æ–π", "–ö–æ—Ñ–µ-–±—Ä–µ–π–∫"],
                "budget": "$500-$2,000"
            },
            "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤": {
                "duration": "4-6 —á–∞—Å–æ–≤",
                "tasks": ["–í—ã–±–æ—Ä —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞", "–†–∞–∑–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞", "–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç", "–ü–æ–¥–∞—Ä–∫–∏"],
                "budget": "$3,000-$10,000"
            }
        }
        
        selected_template = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω:", list(templates.keys()))
        
        if st.button("üìù –ü—Ä–∏–º–µ–Ω–∏—Ç—å —à–∞–±–ª–æ–Ω"):
            template = templates[selected_template]
            st.success(f"–®–∞–±–ª–æ–Ω '{selected_template}' –ø—Ä–∏–º–µ–Ω–µ–Ω!")
            
            col1, col2 = st.columns(2)
            with col1:
                st.markdown(f"**–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:** {template['duration']}")
                st.markdown(f"**–ë—é–¥–∂–µ—Ç:** {template['budget']}")
            
            with col2:
                st.markdown("**–¢–∏–ø–æ–≤—ã–µ –∑–∞–¥–∞—á–∏:**")
                for task in template['tasks']:
                    st.markdown(f"- {task}")
    
    with tab2:
        st.subheader("üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º–∏")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        col1, col2, col3, col4 = st.columns(4)
        
        with col1:
            st.metric("–ü—Ä–∏–≥–ª–∞—à–µ–Ω–æ", "150", "25")
        with col2:
            st.metric("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏–ª–∏", "85", "15")
        with col3:
            st.metric("–û—Ç–∫–∞–∑–∞–ª–∏—Å—å", "12", "3")
        with col4:
            st.metric("–û–∂–∏–¥–∞—é—Ç –æ—Ç–≤–µ—Ç–∞", "53", "7")
        
        # –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        with st.expander("üìß –ú–∞—Å—Å–æ–≤–æ–µ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ"):
            with st.form("mass_invite"):
                email_list = st.text_area("Email –∞–¥—Ä–µ—Å–∞ (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É):")
                invite_template = st.selectbox("–®–∞–±–ª–æ–Ω –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è:", ["–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π", "–î—Ä—É–∂–µ–ª—é–±–Ω—ã–π", "–ö—Ä–∞—Ç–∫–∏–π"])
                send_date = st.date_input("–î–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏:")
                
                st.subheader("–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä:")
                preview_text = """
                –¢–µ–º–∞: –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ Tech Conference 2024
                
                –£–≤–∞–∂–∞–µ–º—ã–π –∫–æ–ª–ª–µ–≥–∞,
                
                –ü—Ä–∏–≥–ª–∞—à–∞–µ–º –í–∞—Å –ø—Ä–∏–Ω—è—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ Tech Conference 2024.
                –î–∞—Ç–∞: 15 —Ñ–µ–≤—Ä–∞–ª—è 2024
                –í—Ä–µ–º—è: 10:00-18:00
                –ú–µ—Å—Ç–æ: –ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü-–∑–∞–ª –ê
                
                –î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É—á–∞—Å—Ç–∏—è –ø–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ...
                """
                st.text(preview_text)
                
                if st.form_submit_button("üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è"):
                    st.success("–ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!")
        
        # –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤
        st.subheader("üìã –°–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
        
        participants = [
            {"name": "–ê–Ω–Ω–∞ –ò–≤–∞–Ω–æ–≤–∞", "email": "anna@company.com", "status": "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏–ª", "role": "–°–ø–∏–∫–µ—Ä"},
            {"name": "–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤", "email": "petr@company.com", "status": "–û–∂–∏–¥–∞–µ—Ç", "role": "–£—á–∞—Å—Ç–Ω–∏–∫"},
            {"name": "–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞", "email": "maria@company.com", "status": "–û—Ç–∫–∞–∑–∞–ª—Å—è", "role": "–£—á–∞—Å—Ç–Ω–∏–∫"}
        ]
        
        for participant in participants:
            col1, col2, col3, col4 = st.columns([2, 2, 1, 1])
            
            with col1:
                st.write(f"üë§ **{participant['name']}**")
            with col2:
                st.write(participant['email'])
            with col3:
                if participant['status'] == '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏–ª':
                    st.success("‚úÖ")
                elif participant['status'] == '–û—Ç–∫–∞–∑–∞–ª—Å—è':
                    st.error("‚ùå")
                else:
                    st.warning("‚è≥")
            with col4:
                st.write(participant['role'])
        
        # –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –º–µ—Å—Ç–µ
        st.subheader("üìù –ë—ã—Å—Ç—Ä–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
        
        with st.form("quick_registration"):
            col1, col2 = st.columns(2)
            
            with col1:
                reg_name = st.text_input("–ò–º—è —É—á–∞—Å—Ç–Ω–∏–∫–∞:")
                reg_email = st.text_input("Email:")
            
            with col2:
                reg_company = st.text_input("–ö–æ–º–ø–∞–Ω–∏—è:")
                reg_role = st.selectbox("–†–æ–ª—å:", ["–£—á–∞—Å—Ç–Ω–∏–∫", "–°–ø–∏–∫–µ—Ä", "–ü–∞—Ä—Ç–Ω–µ—Ä", "–ü—Ä–µ—Å—Å–∞"])
            
            if st.form_submit_button("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å"):
                if reg_name and reg_email:
                    st.success(f"–£—á–∞—Å—Ç–Ω–∏–∫ {reg_name} –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω!")
    
    with tab3:
        st.subheader("üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
        with st.expander("‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É"):
            with st.form("create_task"):
                col1, col2 = st.columns(2)
                
                with col1:
                    task_title = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏:")
                    task_assignee = st.text_input("–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π:")
                    task_priority = st.selectbox("–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:", ["–í—ã—Å–æ–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–ù–∏–∑–∫–∏–π"])
                
                with col2:
                    task_due_date = st.date_input("–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
                    task_category = st.selectbox("–ö–∞—Ç–µ–≥–æ—Ä–∏—è:", ["–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞", "–õ–æ–≥–∏—Å—Ç–∏–∫–∞", "–¢–µ—Ö–Ω–∏–∫–∞", "–ö–µ–π—Ç–µ—Ä–∏–Ω–≥"])
                    task_budget = st.number_input("–ë—é–¥–∂–µ—Ç ($):", min_value=0.0, value=0.0)
                
                task_description = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏:")
                
                if st.form_submit_button("–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É"):
                    if task_title:
                        st.success(f"–ó–∞–¥–∞—á–∞ '{task_title}' —Å–æ–∑–¥–∞–Ω–∞!")
        
        # –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
        st.subheader("üìö –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á")
        
        tasks = [
            {"title": "–ë—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü-–∑–∞–ª–∞", "assignee": "–ê–Ω–Ω–∞ –ò.", "due": "2024-01-20", "status": "–í—ã–ø–æ–ª–Ω–µ–Ω–∞", "priority": "–í—ã—Å–æ–∫–∏–π"},
            {"title": "–ó–∞–∫–∞–∑ –∫–µ–π—Ç–µ—Ä–∏–Ω–≥–∞", "assignee": "–ü–µ—Ç—Ä –ü.", "due": "2024-01-25", "status": "–í —Ä–∞–±–æ—Ç–µ", "priority": "–°—Ä–µ–¥–Ω–∏–π"},
            {"title": "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ê–í –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è", "assignee": "–ò–≤–∞–Ω –°.", "due": "2024-02-10", "status": "–û–∂–∏–¥–∞–µ—Ç", "priority": "–í—ã—Å–æ–∫–∏–π"},
            {"title": "–ü–µ—á–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤", "assignee": "–ú–∞—Ä–∏—è –ö.", "due": "2024-02-12", "status": "–û–∂–∏–¥–∞–µ—Ç", "priority": "–ù–∏–∑–∫–∏–π"}
        ]
        
        # –§–∏–ª—å—Ç—Ä—ã
        col1, col2, col3 = st.columns(3)
        
        with col1:
            status_filter = st.selectbox("–°—Ç–∞—Ç—É—Å:", ["–í—Å–µ", "–û–∂–∏–¥–∞–µ—Ç", "–í —Ä–∞–±–æ—Ç–µ", "–í—ã–ø–æ–ª–Ω–µ–Ω–∞"])
        with col2:
            priority_filter = st.selectbox("–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:", ["–í—Å–µ", "–í—ã—Å–æ–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–ù–∏–∑–∫–∏–π"])
        with col3:
            assignee_filter = st.text_input("–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π:")
        
        for task in tasks:
            with st.expander(f"üìã {task['title']} | {task['due']}"):
                col1, col2 = st.columns([3, 1])
                
                with col1:
                    st.markdown(f"**–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π:** {task['assignee']}")
                    st.markdown(f"**–°—Ä–æ–∫:** {task['due']}")
                    st.markdown(f"**–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:** {task['priority']}")
                
                with col2:
                    if task['status'] == '–í—ã–ø–æ–ª–Ω–µ–Ω–∞':
                        st.success("‚úÖ –í—ã–ø–æ–ª–Ω–µ–Ω–∞")
                    elif task['status'] == '–í —Ä–∞–±–æ—Ç–µ':
                        st.warning("‚è≥ –í —Ä–∞–±–æ—Ç–µ")
                    else:
                        st.info("üìã –û–∂–∏–¥–∞–µ—Ç")
                    
                    if st.button("–ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å", key=f"status_{task['title']}"):
                        st.success("–°—Ç–∞—Ç—É—Å –æ–±–Ω–æ–≤–ª–µ–Ω!")
    
    with tab4:
        st.subheader("üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π")
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ —Å –ò–ò
        if st.button("ü§ñ –ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", type="primary"):
            with st.spinner("–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π..."):
                
                event_data = f"""
                –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è–º:
                
                –ü—Ä–æ–≤–µ–¥–µ–Ω–æ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π: 12 –∑–∞ –∫–≤–∞—Ä—Ç–∞–ª
                –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: 850
                –°—Ä–µ–¥–Ω—è—è –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å: 78%
                –û–±—â–∏–π –±—é–¥–∂–µ—Ç: $45,000
                –°—Ä–µ–¥–Ω–∏–π –±—é–¥–∂–µ—Ç –Ω–∞ —É—á–∞—Å—Ç–Ω–∏–∫–∞: $53
                
                –¢–∏–ø—ã –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π:
                - –ö–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏–∏: 4 (350 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)
                - –°–µ–º–∏–Ω–∞—Ä—ã: 6 (280 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)
                - –ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤—ã: 2 (220 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤)
                
                –ü–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:
                - Satisfaction Score: 8.3/10
                - NPS: 72
                - –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å: 65%
                """
                
                @async_to_sync
                async def analyze_events():
                    return await llm_client.analyze_text(
                        event_data,
                        "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π. "
                        "–í—ã–¥–µ–ª–∏ —É—Å–ø–µ—à–Ω—ã–µ –ø—Ä–∞–∫—Ç–∏–∫–∏, –ø—Ä–æ–±–ª–µ–º—ã –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é."
                    )
                
                analysis = analyze_events()
                
                st.subheader("üìù –ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
                st.markdown(analysis)
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏ –º–µ—Ç—Ä–∏–∫–∏
        st.subheader("üìà –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏")
        
        import pandas as pd
        import plotly.express as px
        
        # –ì—Ä–∞—Ñ–∏–∫ –ø–æ—Å–µ—â–∞–µ–º–æ—Å—Ç–∏
        months = ['–Ø–Ω–≤', '–§–µ–≤', '–ú–∞—Ä', '–ê–ø—Ä', '–ú–∞–π', '–ò—é–Ω']
        attendance_data = pd.DataFrame({
            '–ú–µ—Å—è—Ü': months,
            '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ': [100, 80, 120, 90, 110, 95],
            '–§–∞–∫—Ç–∏—á–µ—Å–∫–∏': [85, 75, 95, 78, 88, 82]
        })
        
        fig = px.bar(attendance_data, x='–ú–µ—Å—è—Ü', y=['–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ', '–§–∞–∫—Ç–∏—á–µ—Å–∫–∏'],
                    title="–ü–æ—Å–µ—â–∞–µ–º–æ—Å—Ç—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π", barmode='group')
        st.plotly_chart(fig, use_container_width=True)
        
        # –û—Ç—á–µ—Ç—ã
        st.subheader("üìÑ –û—Ç—á–µ—Ç—ã")
        
        col1, col2, col3 = st.columns(3)
        
        with col1:
            if st.button("üìä –û—Ç—á–µ—Ç –ø–æ –±—é–¥–∂–µ—Ç—É"):
                st.success("–§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!")
        
        with col2:
            if st.button("üë• –û—Ç—á–µ—Ç –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º"):
                st.success("–û—Ç—á–µ—Ç –ø–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º –≥–æ—Ç–æ–≤!")
        
        with col3:
            if st.button("üìà –°–≤–æ–¥–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞"):
                st.success("–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç—á–µ—Ç —Å–æ–∑–¥–∞–Ω!")

if __name__ == "__main__":
    main()
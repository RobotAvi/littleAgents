"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è HR –∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–π
–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ 1:1 –≤—Å—Ç—Ä–µ—á, —Ñ–∏–¥–±–µ–∫ —Å–µ—Å—Å–∏–π –∏ –∞–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π –∫–æ–º–∞–Ω–¥—ã.
"""

import streamlit as st
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..'))

from shared.llm_client import llm_client
from shared.config import Config
from shared.utils import (
    create_streamlit_header, display_metrics, 
    validate_config, async_to_sync
)
from datetime import datetime, timedelta

def main():
    create_streamlit_header(
        "HR –∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏–∏", 
        "–ü—Ä–æ–≤–µ–¥–µ–Ω–∏–µ 1:1 –≤—Å—Ç—Ä–µ—á –∏ –∞–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π –∫–æ–º–∞–Ω–¥—ã"
    )
    
    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    with st.sidebar:
        st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        
        # –†–æ–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_role = st.selectbox(
            "–í–∞—à–∞ —Ä–æ–ª—å:",
            ["HR Manager", "Team Lead", "Manager", "Employee"],
            index=0
        )
        
        # –ö–æ–º–∞–Ω–¥–∞/–æ—Ç–¥–µ–ª
        team_filter = st.selectbox(
            "–ö–æ–º–∞–Ω–¥–∞/–æ—Ç–¥–µ–ª:",
            ["–í—Å–µ", "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞", "QA", "–î–∏–∑–∞–π–Ω", "–ü—Ä–æ–¥—É–∫—Ç"],
            index=0
        )
        
        # –ü–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞
        analysis_period = st.selectbox(
            "–ü–µ—Ä–∏–æ–¥ –∞–Ω–∞–ª–∏–∑–∞:",
            ["–ü–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü", "–ö–≤–∞—Ä—Ç–∞–ª", "–ü–æ–ª–≥–æ–¥–∞"],
            index=0
        )
        
        if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", type="primary"):
            st.rerun()
    
    # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    tab1, tab2, tab3, tab4 = st.tabs([
        "üìä –û–±–∑–æ—Ä", "üë• 1:1 –í—Å—Ç—Ä–µ—á–∏", "üìù –§–∏–¥–±–µ–∫", "üìà –ê–Ω–∞–ª–∏—Ç–∏–∫–∞"
    ])
    
    with tab1:
        st.subheader("üìä –û–±–∑–æ—Ä –∫–æ–º–∞–Ω–¥—ã")
        
        # –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        col1, col2, col3, col4 = st.columns(4)
        
        with col1:
            st.metric("–°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤", "24", "2")
        with col2:
            st.metric("–ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ", "8.2/10", "0.3")
        with col3:
            st.metric("1:1 –∑–∞ –º–µ—Å—è—Ü", "18", "3")
        with col4:
            st.metric("–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å", "15", "5")
        
        # –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã
        st.subheader("üòä –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã")
        
        import pandas as pd
        import plotly.express as px
        
        # –°–∏–º—É–ª—è—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è
        mood_data = pd.DataFrame({
            'date': pd.date_range(start='2024-01-01', periods=30, freq='D'),
            'mood_score': [7.5 + i*0.02 + (i % 7)*0.5 for i in range(30)]
        })
        
        fig = px.line(mood_data, x='date', y='mood_score', 
                     title="–î–∏–Ω–∞–º–∏–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã")
        st.plotly_chart(fig, use_container_width=True)
        
        # –°—Ç–∞—Ç—É—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤
        st.subheader("üë• –°—Ç–∞—Ç—É—Å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤")
        
        employees = [
            {"name": "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤", "role": "Developer", "mood": 8.5, "last_1on1": "5 –¥–Ω–µ–π –Ω–∞–∑–∞–¥"},
            {"name": "–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤", "role": "QA", "mood": 7.2, "last_1on1": "2 –Ω–µ–¥–µ–ª–∏ –Ω–∞–∑–∞–¥"},
            {"name": "–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞", "role": "Designer", "mood": 9.1, "last_1on1": "1 –Ω–µ–¥–µ–ª—è –Ω–∞–∑–∞–¥"}
        ]
        
        for emp in employees:
            col1, col2, col3, col4 = st.columns([2, 1, 1, 1])
            
            with col1:
                st.write(f"üë§ **{emp['name']}**")
                st.write(f"_{emp['role']}_")
            with col2:
                mood = emp['mood']
                if mood >= 8:
                    st.success(f"üòä {mood}")
                elif mood >= 6:
                    st.warning(f"üòê {mood}")
                else:
                    st.error(f"üòû {mood}")
            with col3:
                st.write(f"üìÖ {emp['last_1on1']}")
            with col4:
                if st.button("üìû", key=f"schedule_{emp['name']}"):
                    st.success(f"1:1 –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ —Å {emp['name']}")
    
    with tab2:
        st.subheader("üë• 1:1 –í—Å—Ç—Ä–µ—á–∏")
        
        # –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏
        st.subheader("üìÖ –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤—Å—Ç—Ä–µ—á–∏")
        
        upcoming_meetings = [
            {"employee": "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤", "date": "–ó–∞–≤—Ç—Ä–∞ 14:00", "type": "–†–µ–≥—É–ª—è—Ä–Ω–∞—è", "status": "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞"},
            {"employee": "–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞", "date": "–ü—è—Ç–Ω–∏—Ü–∞ 10:00", "type": "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å", "status": "–û–∂–∏–¥–∞–µ—Ç"}
        ]
        
        for meeting in upcoming_meetings:
            with st.expander(f"üìÖ {meeting['employee']} - {meeting['date']}"):
                col1, col2 = st.columns([2, 1])
                
                with col1:
                    st.markdown(f"**–°–æ—Ç—Ä—É–¥–Ω–∏–∫:** {meeting['employee']}")
                    st.markdown(f"**–í—Ä–µ–º—è:** {meeting['date']}")
                    st.markdown(f"**–¢–∏–ø:** {meeting['type']}")
                    st.markdown(f"**–°—Ç–∞—Ç—É—Å:** {meeting['status']}")
                
                with col2:
                    if st.button(f"–ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å—Å—è", key=f"prep_{meeting['employee']}"):
                        st.info("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤ –¥–ª—è –≤—Å—Ç—Ä–µ—á–∏...")
                    if st.button(f"–ü–µ—Ä–µ–Ω–µ—Å—Ç–∏", key=f"reschedule_{meeting['employee']}"):
                        st.warning("–í—Å—Ç—Ä–µ—á–∞ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω–∞")
        
        # –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–π –≤—Å—Ç—Ä–µ—á–∏
        st.subheader("‚ûï –ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å 1:1")
        
        with st.form("schedule_1on1"):
            employee_select = st.selectbox("–°–æ—Ç—Ä—É–¥–Ω–∏–∫:", ["–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤", "–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤", "–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞"])
            meeting_date = st.date_input("–î–∞—Ç–∞:")
            meeting_time = st.time_input("–í—Ä–µ–º—è:")
            meeting_type = st.selectbox("–¢–∏–ø –≤—Å—Ç—Ä–µ—á–∏:", ["–†–µ–≥—É–ª—è—Ä–Ω–∞—è", "–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å", "–†–∞–∑–≤–∏—Ç–∏–µ –∫–∞—Ä—å–µ—Ä—ã", "–ü—Ä–æ–±–ª–µ–º—ã"])
            meeting_notes = st.text_area("–ó–∞–º–µ—Ç–∫–∏/–¶–µ–ª–∏:")
            
            if st.form_submit_button("–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –≤—Å—Ç—Ä–µ—á—É"):
                st.success(f"1:1 —Å {employee_select} –∑–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ {meeting_date} {meeting_time}")
    
    with tab3:
        st.subheader("üìù –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ñ–∏–¥–±–µ–∫–æ–º")
        
        # –°–±–æ—Ä –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
        st.subheader("üìä –°–±–æ—Ä –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏")
        
        with st.form("feedback_form"):
            feedback_type = st.selectbox("–¢–∏–ø —Ñ–∏–¥–±–µ–∫–∞:", ["360 –≥—Ä–∞–¥—É—Å–æ–≤", "–°–∞–º–æ–æ—Ü–µ–Ω–∫–∞", "–û—Ç —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è", "Peer review"])
            feedback_employee = st.selectbox("–°–æ—Ç—Ä—É–¥–Ω–∏–∫:", ["–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤", "–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤", "–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞"])
            feedback_period = st.selectbox("–ü–µ—Ä–∏–æ–¥:", ["–ö–≤–∞—Ä—Ç–∞–ª", "–ü–æ–ª–≥–æ–¥–∞", "–ì–æ–¥"])
            
            # –ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏
            st.subheader("–ö—Ä–∏—Ç–µ—Ä–∏–∏ –æ—Ü–µ–Ω–∫–∏ (1-10):")
            
            technical_skills = st.slider("–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏:", 1, 10, 7)
            communication = st.slider("–ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è:", 1, 10, 8)
            teamwork = st.slider("–†–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ:", 1, 10, 8)
            initiative = st.slider("–ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å:", 1, 10, 6)
            problem_solving = st.slider("–†–µ—à–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º:", 1, 10, 7)
            
            feedback_comments = st.text_area("–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏:")
            
            if st.form_submit_button("–°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∏–¥–±–µ–∫"):
                st.success("–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!")
        
        # –ò—Å—Ç–æ—Ä–∏—è —Ñ–∏–¥–±–µ–∫–∞
        st.subheader("üìö –ò—Å—Ç–æ—Ä–∏—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏")
        
        feedback_history = [
            {"employee": "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤", "date": "01.12.2023", "type": "–ö–≤–∞—Ä—Ç–∞–ª—å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞", "score": 8.2},
            {"employee": "–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤", "date": "15.11.2023", "type": "360 –≥—Ä–∞–¥—É—Å–æ–≤", "score": 7.5}
        ]
        
        for feedback in feedback_history:
            col1, col2, col3, col4 = st.columns([2, 1, 1, 1])
            
            with col1:
                st.write(f"üë§ {feedback['employee']}")
            with col2:
                st.write(feedback['date'])
            with col3:
                st.write(feedback['type'])
            with col4:
                score = feedback['score']
                if score >= 8:
                    st.success(f"‚≠ê {score}")
                elif score >= 6:
                    st.warning(f"‚ö° {score}")
                else:
                    st.error(f"‚ö†Ô∏è {score}")
    
    with tab4:
        st.subheader("üìà HR –ê–Ω–∞–ª–∏—Ç–∏–∫–∞")
        
        # –ê–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é –ò–ò
        if st.button("ü§ñ –ê–Ω–∞–ª–∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–π –∫–æ–º–∞–Ω–¥—ã", type="primary"):
            with st.spinner("–ê–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö..."):
                
                team_data = """
                –î–∞–Ω–Ω—ã–µ –ø–æ –∫–æ–º–∞–Ω–¥–µ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –º–µ—Å—è—Ü:
                
                –ù–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: 8.2/10 (—É–ª—É—á—à–µ–Ω–∏–µ –Ω–∞ 0.3)
                –ü—Ä–æ–≤–µ–¥–µ–Ω–æ 1:1 –≤—Å—Ç—Ä–µ—á: 18
                –°–æ–±—Ä–∞–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: 15
                
                –ö–ª—é—á–µ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏:
                - –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –Ω–∞–≤—ã–∫–∏: —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª 7.5
                - –ö–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è: —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª 8.1
                - –†–∞–±–æ—Ç–∞ –≤ –∫–æ–º–∞–Ω–¥–µ: —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª 8.3
                - –ò–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å: —Å—Ä–µ–¥–Ω–∏–π –±–∞–ª–ª 6.8
                
                –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏:
                - 2 —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –Ω–µ –ø—Ä–æ–≤–æ–¥–∏–ª–∏ 1:1 –±–æ–ª–µ–µ 2 –Ω–µ–¥–µ–ª—å
                - –ù–∏–∑–∫–∏–µ –æ—Ü–µ–Ω–∫–∏ –ø–æ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏
                """
                
                @async_to_sync
                async def analyze_team():
                    return await llm_client.analyze_text(
                        team_data,
                        "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å —Ç–æ—á–∫–∏ –∑—Ä–µ–Ω–∏—è HR. "
                        "–í—ã–¥–µ–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, —Ä–∏—Å–∫–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é."
                    )
                
                analysis = analyze_team()
                
                st.subheader("üìù –ê–Ω–∞–ª–∏–∑ –∫–æ–º–∞–Ω–¥—ã")
                st.markdown(analysis)
        
        # –û—Ç—á–µ—Ç—ã
        st.subheader("üìä –û—Ç—á–µ—Ç—ã")
        
        col1, col2, col3 = st.columns(3)
        
        with col1:
            if st.button("üìà –û—Ç—á–µ—Ç –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è–º"):
                st.info("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –ø–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è–º –∫–æ–º–∞–Ω–¥—ã...")
        
        with col2:
            if st.button("üë• –û—Ç—á–µ—Ç –ø–æ 1:1"):
                st.info("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –ø–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—ã–º 1:1...")
        
        with col3:
            if st.button("üìù –û—Ç—á–µ—Ç –ø–æ —Ñ–∏–¥–±–µ–∫—É"):
                st.info("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ –ø–æ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏...")

if __name__ == "__main__":
    main()
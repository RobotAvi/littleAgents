"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
–°–±–æ—Ä –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π –∏ –¥—Ä—É–≥–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤.
"""

import streamlit as st
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..'))

from shared.llm_client import llm_client
from shared.config import Config
from shared.utils import (
    create_streamlit_header, display_metrics, 
    validate_config, async_to_sync
)
from datetime import datetime

def main():
    create_streamlit_header(
        "–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤", 
        "–°–±–æ—Ä –∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π –∏ –¥—Ä—É–≥–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤"
    )
    
    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    with st.sidebar:
        st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        
        # –¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞
        project_type = st.selectbox(
            "–¢–∏–ø –ø—Ä–æ–µ–∫—Ç–∞:",
            ["–í–µ–±-—Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", "–ú–æ–±–∏–ª—å–Ω–∞—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∞", "–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ", "–ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—è"],
            index=0
        )
        
        # –¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è
        audience = st.selectbox(
            "–¶–µ–ª–µ–≤–∞—è –∞—É–¥–∏—Ç–æ—Ä–∏—è:",
            ["–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∫–æ–º–∞–Ω–¥–∞", "–ú–µ–Ω–µ–¥–∂–º–µ–Ω—Ç", "–ö–ª–∏–µ–Ω—Ç—ã", "–ò–Ω–≤–µ—Å—Ç–æ—Ä—ã"],
            index=0
        )
        
        if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", type="primary"):
            st.rerun()
    
    # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    tab1, tab2, tab3, tab4 = st.tabs([
        "üìÅ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã", "üìä –ü—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏", "üìÑ –î–æ–∫—É–º–µ–Ω—Ç—ã", "ü§ñ –ò–ò –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä"
    ])
    
    with tab1:
        st.subheader("üìÅ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞–º–∏")
        
        # –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–æ–≤
        st.subheader("‚¨ÜÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤")
        
        uploaded_files = st.file_uploader(
            "–í—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª—ã:",
            accept_multiple_files=True,
            type=['pdf', 'pptx', 'docx', 'txt', 'md', 'jpg', 'png']
        )
        
        if uploaded_files:
            st.success(f"–ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ñ–∞–π–ª–æ–≤: {len(uploaded_files)}")
            
            for file in uploaded_files:
                st.markdown(f"- üìÑ {file.name} ({file.type})")
        
        # –ö–∞—Ç–∞–ª–æ–≥ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
        st.subheader("üìö –ö–∞—Ç–∞–ª–æ–≥ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤")
        
        materials = [
            {"name": "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞", "type": "–î–∏–∞–≥—Ä–∞–º–º–∞", "status": "–ì–æ—Ç–æ–≤"},
            {"name": "User Stories", "type": "–î–æ–∫—É–º–µ–Ω—Ç", "status": "–í —Ä–∞–±–æ—Ç–µ"},
            {"name": "–î–∏–∑–∞–π–Ω –º–∞–∫–µ—Ç—ã", "type": "–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è", "status": "–ì–æ—Ç–æ–≤"},
            {"name": "API –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è", "type": "–î–æ–∫—É–º–µ–Ω—Ç", "status": "–ì–æ—Ç–æ–≤"}
        ]
        
        for material in materials:
            col1, col2, col3, col4 = st.columns([3, 1, 1, 1])
            
            with col1:
                st.write(f"üìÑ **{material['name']}**")
            with col2:
                st.write(material['type'])
            with col3:
                if material['status'] == '–ì–æ—Ç–æ–≤':
                    st.success("‚úÖ")
                else:
                    st.warning("‚è≥")
            with col4:
                if st.button("üì•", key=f"download_{material['name']}"):
                    st.info("–°–∫–∞—á–∏–≤–∞–Ω–∏–µ...")
    
    with tab2:
        st.subheader("üìä –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π")
        
        # –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π
        with st.form("presentation_builder"):
            st.subheader("üé® –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏")
            
            pres_title = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏:")
            pres_sections = st.text_area(
                "–†–∞–∑–¥–µ–ª—ã (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É):",
                value="–í–≤–µ–¥–µ–Ω–∏–µ\n–û–±–∑–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞\n–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –¥–µ—Ç–∞–ª–∏\n–†–µ–∑—É–ª—å—Ç–∞—Ç—ã\n–í—ã–≤–æ–¥—ã"
            )
            pres_style = st.selectbox("–°—Ç–∏–ª—å:", ["–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π", "–°–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π", "–ú–∏–Ω–∏–º–∞–ª–∏–∑–º"])
            
            if st.form_submit_button("üéØ –°–æ–∑–¥–∞—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä—É"):
                if pres_title:
                    st.success("–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω–∞!")
                    
                    sections = pres_sections.strip().split('\n')
                    for i, section in enumerate(sections, 1):
                        st.markdown(f"{i}. **{section}**")
        
        # –®–∞–±–ª–æ–Ω—ã —Å–ª–∞–π–¥–æ–≤
        st.subheader("üìë –®–∞–±–ª–æ–Ω—ã —Å–ª–∞–π–¥–æ–≤")
        
        templates = [
            "üéØ –¢–∏—Ç—É–ª—å–Ω—ã–π —Å–ª–∞–π–¥",
            "üìä –°–ª–∞–π–¥ —Å –≥—Ä–∞—Ñ–∏–∫–∞–º–∏", 
            "üìã –°–ª–∞–π–¥ —Å–æ —Å–ø–∏—Å–∫–æ–º",
            "üñºÔ∏è –°–ª–∞–π–¥ —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ–º",
            "üí¨ –°–ª–∞–π–¥ —Å —Ü–∏—Ç–∞—Ç–æ–π"
        ]
        
        selected_template = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —à–∞–±–ª–æ–Ω:", templates)
        
        if st.button("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–ª–∞–π–¥"):
            st.success(f"–î–æ–±–∞–≤–ª–µ–Ω: {selected_template}")
    
    with tab3:
        st.subheader("üìÑ –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤")
        
        # –¢–∏–ø—ã –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
        doc_types = {
            "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ": ["–û–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞", "–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è", "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è", "–ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–∏–µ–º–∫–∏"],
            "–û—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç—É": ["–†–µ–∑—é–º–µ", "–î–æ—Å—Ç–∏–≥–Ω—É—Ç—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã", "–ü—Ä–æ–±–ª–µ–º—ã", "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏"],
            "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è": ["–í–≤–µ–¥–µ–Ω–∏–µ", "–£—Å—Ç–∞–Ω–æ–≤–∫–∞", "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ", "FAQ"]
        }
        
        selected_doc_type = st.selectbox("–¢–∏–ø –¥–æ–∫—É–º–µ–Ω—Ç–∞:", list(doc_types.keys()))
        
        if st.button("üìù –°–æ–∑–¥–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç"):
            st.subheader(f"üìÑ –°—Ç—Ä—É–∫—Ç—É—Ä–∞: {selected_doc_type}")
            
            sections = doc_types[selected_doc_type]
            for i, section in enumerate(sections, 1):
                st.markdown(f"{i}. **{section}**")
                st.text_area(f"–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ —Ä–∞–∑–¥–µ–ª–∞ {i}:", key=f"section_{i}", height=100)
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–∞
        if st.button("ü§ñ –ê–≤—Ç–æ–≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ"):
            st.info("–ó–¥–µ—Å—å –±—É–¥–µ—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ò–ò")
    
    with tab4:
        st.subheader("ü§ñ –ò–ò –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–æ–Ω—Ç–µ–Ω—Ç–∞")
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞
        st.subheader("‚úçÔ∏è –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞")
        
        with st.form("text_generator"):
            text_topic = st.text_input("–¢–µ–º–∞:")
            text_type = st.selectbox("–¢–∏–ø –∫–æ–Ω—Ç–µ–Ω—Ç–∞:", ["–û–ø–∏—Å–∞–Ω–∏–µ", "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è", "–û–±–∑–æ—Ä", "–ó–∞–∫–ª—é—á–µ–Ω–∏–µ"])
            text_length = st.selectbox("–î–ª–∏–Ω–∞:", ["–ö–æ—Ä–æ—Ç–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–ü–æ–¥—Ä–æ–±–Ω—ã–π"])
            
            if st.form_submit_button("ü§ñ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å"):
                if text_topic:
                    with st.spinner("–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–∞..."):
                        
                        @async_to_sync
                        async def generate_text():
                            prompt = f"–°–æ–∑–¥–∞–π {text_type.lower()} –Ω–∞ —Ç–µ–º—É '{text_topic}'. –î–ª–∏–Ω–∞: {text_length.lower()}."
                            return await llm_client.analyze_text("", prompt)
                        
                        generated_text = generate_text()
                        
                        st.subheader("üìù –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç")
                        st.markdown(generated_text)
                        
                        if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç"):
                            st.success("–¢–µ–∫—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
        
        # –ê–Ω–∞–ª–∏–∑ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
        st.subheader("üîç –ê–Ω–∞–ª–∏–∑ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤")
        
        if st.button("üìä –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å–æ–±—Ä–∞–Ω–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã"):
            with st.spinner("–ê–Ω–∞–ª–∏–∑ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤..."):
                analysis_text = """
                –ê–Ω–∞–ª–∏–∑ —Å–æ–±—Ä–∞–Ω–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:
                
                üìä **–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:**
                - –í—Å–µ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: 4
                - –ì–æ—Ç–æ–≤—ã—Ö: 3
                - –í —Ä–∞–±–æ—Ç–µ: 1
                
                üí° **–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**
                - –î–æ–±–∞–≤–∏—Ç—å –±–æ–ª—å—à–µ –≤–∏–∑—É–∞–ª—å–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
                - –°–æ–∑–¥–∞—Ç—å –µ–¥–∏–Ω—ã–π —Å—Ç–∏–ª—å –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è  
                - –ü–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
                """
                
                st.markdown(analysis_text)

if __name__ == "__main__":
    main()
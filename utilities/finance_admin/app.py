"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ñ–∏–Ω–∞–Ω—Å–æ–≤ –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏—è
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞–º–∏, –±—é–¥–∂–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã.
"""

import streamlit as st
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..'))

from shared.llm_client import llm_client
from shared.config import Config
from shared.utils import (
    create_streamlit_header, display_metrics, 
    validate_config, async_to_sync
)
from datetime import datetime, timedelta

def main():
    create_streamlit_header(
        "–§–∏–Ω–∞–Ω—Å—ã –∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ", 
        "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞–º–∏ –∏ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å"
    )
    
    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    with st.sidebar:
        st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        
        # –ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞
        report_period = st.selectbox(
            "–ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞:",
            ["–¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü", "–ö–≤–∞—Ä—Ç–∞–ª", "–ü–æ–ª—É–≥–æ–¥–∏–µ", "–ì–æ–¥"],
            index=0
        )
        
        # –í–∞–ª—é—Ç–∞
        currency = st.selectbox(
            "–í–∞–ª—é—Ç–∞:",
            ["USD", "RUB", "EUR"],
            index=0
        )
        
        # –ö–∞—Ç–µ–≥–æ—Ä–∏—è —Ä–∞—Å—Ö–æ–¥–æ–≤
        expense_categories = st.multiselect(
            "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–∞—Å—Ö–æ–¥–æ–≤:",
            ["–ó–∞—Ä–ø–ª–∞—Ç—ã", "–ê—Ä–µ–Ω–¥–∞", "–ò–¢", "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", "–ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏", "–û–±—É—á–µ–Ω–∏–µ"],
            default=["–ó–∞—Ä–ø–ª–∞—Ç—ã", "–ê—Ä–µ–Ω–¥–∞", "–ò–¢"]
        )
        
        if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ", type="primary"):
            st.rerun()
    
    # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    tab1, tab2, tab3, tab4 = st.tabs([
        "üìä –î–∞—à–±–æ—Ä–¥", "üí∞ –†–∞—Å—Ö–æ–¥—ã", "üìà –ë—é–¥–∂–µ—Ç", "üìã –û—Ç—á–µ—Ç—ã"
    ])
    
    with tab1:
        st.subheader("üìä –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –æ–±–∑–æ—Ä")
        
        # –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        col1, col2, col3, col4 = st.columns(4)
        
        with col1:
            st.metric("–û–±—â–∏–π –±—é–¥–∂–µ—Ç", f"$120,000", "")
        with col2:
            st.metric("–ü–æ—Ç—Ä–∞—á–µ–Ω–æ", f"$85,500", "+$5,200")
        with col3:
            st.metric("–û—Å—Ç–∞—Ç–æ–∫", f"$34,500", "-$5,200")
        with col4:
            st.metric("% –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è", "71%", "+4%")
        
        # –ì—Ä–∞—Ñ–∏–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤
        st.subheader("üìà –î–∏–Ω–∞–º–∏–∫–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤")
        
        import pandas as pd
        import plotly.express as px
        
        # –°–∏–º—É–ª—è—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö —Ä–∞—Å—Ö–æ–¥–æ–≤
        months = ['–Ø–Ω–≤', '–§–µ–≤', '–ú–∞—Ä', '–ê–ø—Ä', '–ú–∞–π', '–ò—é–Ω']
        expenses_data = pd.DataFrame({
            '–ú–µ—Å—è—Ü': months,
            '–ó–∞—Ä–ø–ª–∞—Ç—ã': [45000, 47000, 46000, 48000, 49000, 47500],
            '–ê—Ä–µ–Ω–¥–∞': [12000, 12000, 12000, 12000, 12000, 12000],
            '–ò–¢': [8000, 9500, 7500, 8200, 9000, 8800],
            '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥': [5000, 6000, 4500, 7000, 6500, 5500]
        })
        
        fig = px.line(expenses_data, x='–ú–µ—Å—è—Ü', y=['–ó–∞—Ä–ø–ª–∞—Ç—ã', '–ê—Ä–µ–Ω–¥–∞', '–ò–¢', '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥'],
                     title="–†–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º")
        st.plotly_chart(fig, use_container_width=True)
        
        # –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞
        st.subheader("ü•ß –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞")
        
        budget_distribution = pd.DataFrame({
            '–ö–∞—Ç–µ–≥–æ—Ä–∏—è': ['–ó–∞—Ä–ø–ª–∞—Ç—ã', '–ê—Ä–µ–Ω–¥–∞', '–ò–¢', '–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥', '–ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏', '–ü—Ä–æ—á–µ–µ'],
            '–°—É–º–º–∞': [47500, 12000, 8800, 5500, 4200, 7000]
        })
        
        fig_pie = px.pie(budget_distribution, values='–°—É–º–º–∞', names='–ö–∞—Ç–µ–≥–æ—Ä–∏—è',
                        title="–°—Ç—Ä—É–∫—Ç—É—Ä–∞ —Ä–∞—Å—Ö–æ–¥–æ–≤")
        st.plotly_chart(fig_pie, use_container_width=True)
    
    with tab2:
        st.subheader("üí∞ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–∞–º–∏")
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Ä–∞—Å—Ö–æ–¥–∞
        with st.expander("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥"):
            with st.form("add_expense"):
                col1, col2 = st.columns(2)
                
                with col1:
                    expense_category = st.selectbox("–ö–∞—Ç–µ–≥–æ—Ä–∏—è:", ["–ó–∞—Ä–ø–ª–∞—Ç—ã", "–ê—Ä–µ–Ω–¥–∞", "–ò–¢", "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", "–ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏", "–û–±—É—á–µ–Ω–∏–µ", "–ü—Ä–æ—á–µ–µ"])
                    expense_amount = st.number_input(f"–°—É–º–º–∞ ({currency}):", min_value=0.0, value=0.0)
                    expense_date = st.date_input("–î–∞—Ç–∞ —Ä–∞—Å—Ö–æ–¥–∞:")
                
                with col2:
                    expense_description = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ:")
                    expense_project = st.text_input("–ü—Ä–æ–µ–∫—Ç (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ):")
                    expense_approved = st.checkbox("–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ")
                
                receipt_file = st.file_uploader("–î–æ–∫—É–º–µ–Ω—Ç/—á–µ–∫:", type=['pdf', 'jpg', 'png', 'xlsx'])
                
                if st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å—Ö–æ–¥"):
                    if expense_amount > 0:
                        st.success(f"–†–∞—Å—Ö–æ–¥ {expense_amount} {currency} –¥–æ–±–∞–≤–ª–µ–Ω!")
        
        # –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥—ã
        st.subheader("üìä –ü–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥—ã")
        
        recent_expenses = [
            {"date": "2024-01-15", "category": "–ò–¢", "amount": 2500, "description": "–õ–∏—Ü–µ–Ω–∑–∏–∏ –ü–û", "status": "–û–¥–æ–±—Ä–µ–Ω–æ"},
            {"date": "2024-01-14", "category": "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", "amount": 1200, "description": "–†–µ–∫–ª–∞–º–∞ –≤ —Å–æ—Ü—Å–µ—Ç—è—Ö", "status": "–û–∂–∏–¥–∞–µ—Ç"},
            {"date": "2024-01-13", "category": "–ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏", "amount": 800, "description": "–ü–æ–µ–∑–¥–∫–∞ –≤ –°–ü–±", "status": "–û–¥–æ–±—Ä–µ–Ω–æ"},
            {"date": "2024-01-12", "category": "–û–±—É—á–µ–Ω–∏–µ", "amount": 500, "description": "–ö—É—Ä—Å –ø–æ DevOps", "status": "–û–¥–æ–±—Ä–µ–Ω–æ"}
        ]
        
        for expense in recent_expenses:
            col1, col2, col3, col4, col5 = st.columns([1, 1, 1, 2, 1])
            
            with col1:
                st.write(expense['date'])
            with col2:
                st.write(expense['category'])
            with col3:
                st.write(f"${expense['amount']}")
            with col4:
                st.write(expense['description'])
            with col5:
                if expense['status'] == '–û–¥–æ–±—Ä–µ–Ω–æ':
                    st.success("‚úÖ")
                else:
                    st.warning("‚è≥")
        
        # –§–∏–ª—å—Ç—Ä—ã –∏ –ø–æ–∏—Å–∫
        st.subheader("üîç –ü–æ–∏—Å–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤")
        
        col1, col2, col3 = st.columns(3)
        
        with col1:
            search_category = st.selectbox("–ö–∞—Ç–µ–≥–æ—Ä–∏—è:", ["–í—Å–µ"] + ["–ó–∞—Ä–ø–ª–∞—Ç—ã", "–ê—Ä–µ–Ω–¥–∞", "–ò–¢", "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥"])
        with col2:
            search_period = st.selectbox("–ü–µ—Ä–∏–æ–¥:", ["–í—Å–µ", "–≠—Ç–æ—Ç –º–µ—Å—è—Ü", "–ü—Ä–æ—à–ª—ã–π –º–µ—Å—è—Ü", "–ö–≤–∞—Ä—Ç–∞–ª"])
        with col3:
            search_status = st.selectbox("–°—Ç–∞—Ç—É—Å:", ["–í—Å–µ", "–û–¥–æ–±—Ä–µ–Ω–æ", "–û–∂–∏–¥–∞–µ—Ç", "–û—Ç–∫–ª–æ–Ω–µ–Ω–æ"])
        
        if st.button("üîç –ù–∞–π—Ç–∏"):
            st.info("–ü–æ–∏—Å–∫ —Ä–∞—Å—Ö–æ–¥–æ–≤ –ø–æ –∑–∞–¥–∞–Ω–Ω—ã–º –∫—Ä–∏—Ç–µ—Ä–∏—è–º...")
    
    with tab3:
        st.subheader("üìà –ë—é–¥–∂–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ")
        
        # –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –±—é–¥–∂–µ—Ç–∞
        st.subheader("üìã –ü–ª–∞–Ω –±—é–¥–∂–µ—Ç–∞ –Ω–∞ –≥–æ–¥")
        
        budget_plan = [
            {"category": "–ó–∞—Ä–ø–ª–∞—Ç—ã", "planned": 570000, "actual": 285000, "remaining": 285000},
            {"category": "–ê—Ä–µ–Ω–¥–∞", "planned": 144000, "actual": 72000, "remaining": 72000},
            {"category": "–ò–¢", "planned": 100000, "actual": 52800, "remaining": 47200},
            {"category": "–ú–∞—Ä–∫–µ—Ç–∏–Ω–≥", "planned": 72000, "actual": 34000, "remaining": 38000}
        ]
        
        for budget in budget_plan:
            with st.expander(f"üíº {budget['category']} - ${budget['planned']:,}"):
                col1, col2, col3 = st.columns(3)
                
                with col1:
                    st.metric("–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ", f"${budget['planned']:,}")
                with col2:
                    st.metric("–ü–æ—Ç—Ä–∞—á–µ–Ω–æ", f"${budget['actual']:,}")
                with col3:
                    st.metric("–û—Å—Ç–∞—Ç–æ–∫", f"${budget['remaining']:,}")
                
                # –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä
                progress = budget['actual'] / budget['planned']
                st.progress(progress)
                st.write(f"–ò—Å–ø–æ–ª–Ω–µ–Ω–∏–µ: {progress:.1%}")
                
                if progress > 0.8:
                    st.warning("‚ö†Ô∏è –ë–ª–∏–∑–∫–æ –∫ –ª–∏–º–∏—Ç—É –±—é–¥–∂–µ—Ç–∞!")
        
        # –ü—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—Ö–æ–¥–æ–≤
        st.subheader("üîÆ –ü—Ä–æ–≥–Ω–æ–∑ —Ä–∞—Å—Ö–æ–¥–æ–≤")
        
        if st.button("üìä –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑"):
            st.info("–ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–≥–Ω–æ–∑–∞...")
            
            # –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞
            forecast_data = {
                "–°–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü": "$28,500",
                "–î–æ –∫–æ–Ω—Ü–∞ –∫–≤–∞—Ä—Ç–∞–ª–∞": "$85,200", 
                "–î–æ –∫–æ–Ω—Ü–∞ –≥–æ–¥–∞": "$156,000"
            }
            
            col1, col2, col3 = st.columns(3)
            
            with col1:
                st.metric("–°–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü", forecast_data["–°–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü"])
            with col2:
                st.metric("–î–æ –∫–æ–Ω—Ü–∞ –∫–≤–∞—Ä—Ç–∞–ª–∞", forecast_data["–î–æ –∫–æ–Ω—Ü–∞ –∫–≤–∞—Ä—Ç–∞–ª–∞"])
            with col3:
                st.metric("–î–æ –∫–æ–Ω—Ü–∞ –≥–æ–¥–∞", forecast_data["–î–æ –∫–æ–Ω—Ü–∞ –≥–æ–¥–∞"])
    
    with tab4:
        st.subheader("üìã –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –æ—Ç—á–µ—Ç—ã")
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ —Å –ò–ò
        if st.button("ü§ñ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑", type="primary"):
            with st.spinner("–ê–Ω–∞–ª–∏–∑ —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö..."):
                
                financial_data = f"""
                –§–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∑–∞ {report_period}:
                
                –û–±—â–∏–π –±—é–¥–∂–µ—Ç: $120,000
                –ü–æ—Ç—Ä–∞—á–µ–Ω–æ: $85,500 (71%)
                –û—Å—Ç–∞—Ç–æ–∫: $34,500
                
                –†–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º:
                - –ó–∞—Ä–ø–ª–∞—Ç—ã: $47,500 (56%)
                - –ê—Ä–µ–Ω–¥–∞: $12,000 (14%)
                - –ò–¢: $8,800 (10%)
                - –ú–∞—Ä–∫–µ—Ç–∏–Ω–≥: $5,500 (6%)
                - –ö–æ–º–∞–Ω–¥–∏—Ä–æ–≤–∫–∏: $4,200 (5%)
                - –ü—Ä–æ—á–µ–µ: $7,000 (8%)
                
                –¢—Ä–µ–Ω–¥—ã:
                - –†–æ—Å—Ç —Ä–∞—Å—Ö–æ–¥–æ–≤ –Ω–∞ –ò–¢ –Ω–∞ 15%
                - –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–æ–≤–æ–≥–æ –±—é–¥–∂–µ—Ç–∞ –Ω–∞ 8%
                - –°—Ç–∞–±–∏–ª—å–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –Ω–∞ –∞—Ä–µ–Ω–¥—É
                """
                
                @async_to_sync
                async def analyze_finances():
                    return await llm_client.analyze_text(
                        financial_data,
                        "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ–º–ø–∞–Ω–∏–∏. "
                        "–í—ã–¥–µ–ª–∏ –æ—Å–Ω–æ–≤–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã, —Ä–∏—Å–∫–∏ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –±—é–¥–∂–µ—Ç–∞."
                    )
                
                analysis = analyze_finances()
                
                st.subheader("üìù –§–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏–∑")
                st.markdown(analysis)
        
        # –¢–∏–ø—ã –æ—Ç—á–µ—Ç–æ–≤
        st.subheader("üìä –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –æ—Ç—á–µ—Ç—ã")
        
        col1, col2, col3 = st.columns(3)
        
        with col1:
            if st.button("üìà P&L –æ—Ç—á–µ—Ç"):
                st.success("–û—Ç—á–µ—Ç –æ –ø—Ä–∏–±—ã–ª—è—Ö –∏ —É–±—ã—Ç–∫–∞—Ö —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!")
            
            if st.button("üí∞ Cash Flow"):
                st.success("–û—Ç—á–µ—Ç –æ –¥–≤–∏–∂–µ–Ω–∏–∏ –¥–µ–Ω–µ–∂–Ω—ã—Ö —Å—Ä–µ–¥—Å—Ç–≤ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!")
        
        with col2:
            if st.button("üìä –ë—é–¥–∂–µ—Ç vs –§–∞–∫—Ç"):
                st.success("–°—Ä–∞–≤–Ω–∏—Ç–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –±—é–¥–∂–µ—Ç–∞ –≥–æ—Ç–æ–≤!")
            
            if st.button("üè¢ –†–∞—Å—Ö–æ–¥—ã –ø–æ –ø—Ä–æ–µ–∫—Ç–∞–º"):
                st.success("–û—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç–∞–º —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!")
        
        with col3:
            if st.button("üìã –ù–∞–ª–æ–≥–æ–≤—ã–π –æ—Ç—á–µ—Ç"):
                st.success("–ù–∞–ª–æ–≥–æ–≤–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å –ø–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–∞!")
            
            if st.button("üìß –û—Ç–ø—Ä–∞–≤–∏—Ç—å CFO"):
                st.success("–û—Ç—á–µ—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã CFO!")
        
        # –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö
        st.subheader("üì§ –≠–∫—Å–ø–æ—Ä—Ç –¥–∞–Ω–Ω—ã—Ö")
        
        export_format = st.selectbox("–§–æ—Ä–º–∞—Ç —ç–∫—Å–ø–æ—Ä—Ç–∞:", ["Excel", "PDF", "CSV"])
        export_period = st.selectbox("–ü–µ—Ä–∏–æ–¥ –¥–∞–Ω–Ω—ã—Ö:", ["–¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü", "–ö–≤–∞—Ä—Ç–∞–ª", "–ì–æ–¥"])
        
        if st.button("üì• –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å"):
            st.success(f"–î–∞–Ω–Ω—ã–µ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ —Ñ–æ—Ä–º–∞—Ç–µ {export_format}!")

if __name__ == "__main__":
    main()
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –≤–µ–¥–µ–Ω–∏—è –≤—Å—Ç—Ä–µ—á
–ü—Ä–æ—Ç–æ–∫–æ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á, —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á –∏ —Ä–∞—Å—Å—ã–ª–∫–∞ –∏—Ç–æ–≥–æ–≤.
"""

import streamlit as st
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..'))

from shared.llm_client import llm_client
from shared.config import Config
from shared.utils import (
    create_streamlit_header, display_metrics, 
    validate_config, async_to_sync
)
from datetime import datetime

def main():
    create_streamlit_header(
        "–í–µ–¥–µ–Ω–∏–µ –≤—Å—Ç—Ä–µ—á", 
        "–ü—Ä–æ—Ç–æ–∫–æ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å—Ç—Ä–µ—á –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∏—Ç–æ–≥–æ–≤—ã—Ö –æ—Ç—á–µ—Ç–æ–≤"
    )
    
    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    with st.sidebar:
        st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        
        # –ê–∫—Ç–∏–≤–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞
        active_meeting = st.selectbox(
            "–ê–∫—Ç–∏–≤–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞:",
            ["–ü–ª–∞–Ω–µ—Ä–∫–∞ –∫–æ–º–∞–Ω–¥—ã", "1:1 —Å –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º", "–î–µ–º–æ –∫–ª–∏–µ–Ω—Ç—É", "–ù–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞"],
            index=0
        )
        
        # –ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        auto_save = st.checkbox("–ê–≤—Ç–æ—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∑–∞–º–µ—Ç–æ–∫", True)
        
        # –®–∞–±–ª–æ–Ω –ø—Ä–æ—Ç–æ–∫–æ–ª–∞
        protocol_template = st.selectbox(
            "–®–∞–±–ª–æ–Ω –ø—Ä–æ—Ç–æ–∫–æ–ª–∞:",
            ["–°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π", "Agile", "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–π"],
            index=0
        )
        
        if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", type="primary"):
            st.rerun()
    
    # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    tab1, tab2, tab3, tab4 = st.tabs([
        "üìù –ü—Ä–æ—Ç–æ–∫–æ–ª", "‚úÖ –†–µ—à–µ–Ω–∏—è", "üìã –ó–∞–¥–∞—á–∏", "üìß –†–∞—Å—Å—ã–ª–∫–∞"
    ])
    
    with tab1:
        st.subheader("üìù –ü—Ä–æ—Ç–æ–∫–æ–ª –≤—Å—Ç—Ä–µ—á–∏")
        
        # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—Å—Ç—Ä–µ—á–µ
        col1, col2 = st.columns(2)
        
        with col1:
            meeting_date = st.date_input("–î–∞—Ç–∞ –≤—Å—Ç—Ä–µ—á–∏:", datetime.now().date())
            meeting_time = st.time_input("–í—Ä–µ–º—è:", datetime.now().time())
        
        with col2:
            meeting_duration = st.number_input("–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–º–∏–Ω):", min_value=15, value=60)
            meeting_type = st.selectbox("–¢–∏–ø –≤—Å—Ç—Ä–µ—á–∏:", ["–ü–ª–∞–Ω–µ—Ä–∫–∞", "1:1", "–î–µ–º–æ", "–†–µ—Ç—Ä–æ—Å–ø–µ–∫—Ç–∏–≤–∞"])
        
        # –£—á–∞—Å—Ç–Ω–∏–∫–∏
        st.subheader("üë• –£—á–∞—Å—Ç–Ω–∏–∫–∏")
        participants = st.text_area(
            "–£—á–∞—Å—Ç–Ω–∏–∫–∏ (–ø–æ –æ–¥–Ω–æ–º—É –Ω–∞ —Å—Ç—Ä–æ–∫—É):",
            value="–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤ (–≤–µ–¥—É—â–∏–π)\n–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤\n–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞"
        )
        
        # –ü–æ–≤–µ—Å—Ç–∫–∞ –¥–Ω—è
        st.subheader("üìã –ü–æ–≤–µ—Å—Ç–∫–∞ –¥–Ω—è")
        agenda = st.text_area(
            "–û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã:",
            value="1. –û–±–∑–æ—Ä –ø—Ä–æ–≥—Ä–µ—Å—Å–∞ –ø–æ –∑–∞–¥–∞—á–∞–º\n2. –û–±—Å—É–∂–¥–µ–Ω–∏–µ –±–ª–æ–∫–µ—Ä–æ–≤\n3. –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –Ω–µ–¥–µ–ª—é",
            height=150
        )
        
        # –ó–∞–º–µ—Ç–∫–∏
        st.subheader("üìù –ó–∞–º–µ—Ç–∫–∏ –≤—Å—Ç—Ä–µ—á–∏")
        meeting_notes = st.text_area(
            "–ó–∞–ø–∏—Å–∏ –≤ —Ö–æ–¥–µ –≤—Å—Ç—Ä–µ—á–∏:",
            placeholder="–í–≤–µ–¥–∏—Ç–µ –∑–∞–º–µ—Ç–∫–∏ –∑–¥–µ—Å—å...",
            height=200
        )
        
        # –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        col1, col2, col3 = st.columns(3)
        
        with col1:
            if st.button("üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª"):
                st.success("–ü—Ä–æ—Ç–æ–∫–æ–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω!")
        
        with col2:
            if st.button("üì§ –≠–∫—Å–ø–æ—Ä—Ç –≤ PDF"):
                st.info("–≠–∫—Å–ø–æ—Ä—Ç –≤ PDF...")
        
        with col3:
            if st.button("üìã –°–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω"):
                st.success("–®–∞–±–ª–æ–Ω —Å–æ–∑–¥–∞–Ω!")
    
    with tab2:
        st.subheader("‚úÖ –ü—Ä–∏–Ω—è—Ç—ã–µ —Ä–µ—à–µ–Ω–∏—è")
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è
        with st.form("add_decision"):
            st.subheader("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ")
            
            decision_text = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ —Ä–µ—à–µ–Ω–∏—è:")
            decision_owner = st.text_input("–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π:")
            decision_deadline = st.date_input("–°—Ä–æ–∫ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è:")
            decision_priority = st.selectbox("–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:", ["–í—ã—Å–æ–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–ù–∏–∑–∫–∏–π"])
            
            if st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å —Ä–µ—à–µ–Ω–∏–µ"):
                if decision_text:
                    st.success("–†–µ—à–µ–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ!")
        
        # –°–ø–∏—Å–æ–∫ —Ä–µ—à–µ–Ω–∏–π
        st.subheader("üìã –°–ø–∏—Å–æ–∫ —Ä–µ—à–µ–Ω–∏–π")
        
        decisions = [
            {
                "text": "–ò–∑–º–µ–Ω–∏—Ç—å –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö",
                "owner": "–†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –ê",
                "deadline": "2024-01-15",
                "priority": "–í—ã—Å–æ–∫–∏–π",
                "status": "–í —Ä–∞–±–æ—Ç–µ"
            },
            {
                "text": "–ü—Ä–æ–≤–µ—Å—Ç–∏ –∫–æ–¥-—Ä–µ–≤—å—é",
                "owner": "–¢–∏–º–ª–∏–¥",
                "deadline": "2024-01-10",
                "priority": "–°—Ä–µ–¥–Ω–∏–π", 
                "status": "–ó–∞–≤–µ—Ä—à–µ–Ω–æ"
            }
        ]
        
        for i, decision in enumerate(decisions):
            with st.expander(f"‚úÖ –†–µ—à–µ–Ω–∏–µ {i+1}: {decision['text'][:50]}..."):
                col1, col2 = st.columns([2, 1])
                
                with col1:
                    st.markdown(f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {decision['text']}")
                    st.markdown(f"**–û—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã–π:** {decision['owner']}")
                    st.markdown(f"**–°—Ä–æ–∫:** {decision['deadline']}")
                
                with col2:
                    priority_color = {"–í—ã—Å–æ–∫–∏–π": "üî¥", "–°—Ä–µ–¥–Ω–∏–π": "üü°", "–ù–∏–∑–∫–∏–π": "üü¢"}
                    st.markdown(f"**–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:** {priority_color[decision['priority']]} {decision['priority']}")
                    
                    if decision['status'] == '–ó–∞–≤–µ—Ä—à–µ–Ω–æ':
                        st.success("‚úÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ")
                    else:
                        st.warning("‚è≥ –í —Ä–∞–±–æ—Ç–µ")
    
    with tab3:
        st.subheader("üìã –ó–∞–¥–∞—á–∏ –∏–∑ –≤—Å—Ç—Ä–µ—á–∏")
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á
        if st.button("ü§ñ –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á–∏ –∏–∑ –∑–∞–º–µ—Ç–æ–∫", type="primary"):
            if 'meeting_notes' in locals() and meeting_notes:
                with st.spinner("–ê–Ω–∞–ª–∏–∑ –∑–∞–º–µ—Ç–æ–∫ –∏ —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á..."):
                    
                    @async_to_sync
                    async def create_tasks():
                        return await llm_client.create_action_items(meeting_notes)
                    
                    action_items = create_tasks()
                    
                    st.subheader("üìù –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º—ã–µ –∑–∞–¥–∞—á–∏")
                    st.markdown(action_items)
                    
                    if st.button("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á"):
                        st.success("–ó–∞–¥–∞—á–∏ —Å–æ–∑–¥–∞–Ω—ã –∏ –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ç—Ä–µ–∫–µ—Ä!")
            else:
                st.warning("–°–Ω–∞—á–∞–ª–∞ –¥–æ–±–∞–≤—å—Ç–µ –∑–∞–º–µ—Ç–∫–∏ –≤—Å—Ç—Ä–µ—á–∏")
        
        # –†—É—á–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á
        with st.form("add_task"):
            st.subheader("‚ûï –î–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É –≤—Ä—É—á–Ω—É—é")
            
            task_title = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏:")
            task_description = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ:")
            task_assignee = st.text_input("–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:")
            task_due_date = st.date_input("–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
            
            if st.form_submit_button("–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É"):
                if task_title:
                    st.success(f"–ó–∞–¥–∞—á–∞ '{task_title}' —Å–æ–∑–¥–∞–Ω–∞!")
        
        # –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
        st.subheader("üìö –ó–∞–¥–∞—á–∏ –∏–∑ –≤—Å—Ç—Ä–µ—á–∏")
        
        tasks = [
            {"title": "–ò—Å–ø—Ä–∞–≤–∏—Ç—å –±–∞–≥ –≤ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏", "assignee": "Dev A", "status": "–û—Ç–∫—Ä—ã—Ç–∞"},
            {"title": "–û–±–Ω–æ–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—é", "assignee": "Dev B", "status": "–í —Ä–∞–±–æ—Ç–µ"}
        ]
        
        for task in tasks:
            col1, col2, col3 = st.columns([3, 1, 1])
            
            with col1:
                st.write(f"üìã **{task['title']}**")
            with col2:
                st.write(task['assignee'])
            with col3:
                if task['status'] == '–û—Ç–∫—Ä—ã—Ç–∞':
                    st.info("üìã –û—Ç–∫—Ä—ã—Ç–∞")
                else:
                    st.warning("‚è≥ –í —Ä–∞–±–æ—Ç–µ")
    
    with tab4:
        st.subheader("üìß –†–∞—Å—Å—ã–ª–∫–∞ –∏—Ç–æ–≥–æ–≤")
        
        # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
        if st.button("üìù –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç –æ –≤—Å—Ç—Ä–µ—á–µ", type="primary"):
            with st.spinner("–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞..."):
                
                # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö
                meeting_summary = f"""
                –í—Å—Ç—Ä–µ—á–∞: {active_meeting}
                –î–∞—Ç–∞: {datetime.now().strftime('%d.%m.%Y')}
                –£—á–∞—Å—Ç–Ω–∏–∫–∏: {participants if 'participants' in locals() else '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}
                
                –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã:
                {agenda if 'agenda' in locals() else '–ù–µ —É–∫–∞–∑–∞–Ω—ã'}
                
                –ó–∞–º–µ—Ç–∫–∏:
                {meeting_notes if 'meeting_notes' in locals() and meeting_notes else '–ù–µ—Ç –∑–∞–º–µ—Ç–æ–∫'}
                """
                
                @async_to_sync
                async def generate_summary():
                    return await llm_client.analyze_text(
                        meeting_summary,
                        "–°–æ–∑–¥–∞–π —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç—á–µ—Ç –æ –≤—Å—Ç—Ä–µ—á–µ. "
                        "–í—ã–¥–µ–ª–∏ –∫–ª—é—á–µ–≤—ã–µ –º–æ–º–µ–Ω—Ç—ã, —Ä–µ—à–µ–Ω–∏—è –∏ —Å–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏."
                    )
                
                summary = generate_summary()
                
                st.subheader("üìÑ –û—Ç—á–µ—Ç –æ –≤—Å—Ç—Ä–µ—á–µ")
                st.markdown(summary)
        
        # –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—Å—ã–ª–∫–∏
        st.subheader("üìÆ –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—Å—ã–ª–∫–∏")
        
        with st.form("email_settings"):
            email_recipients = st.text_area(
                "–ü–æ–ª—É—á–∞—Ç–µ–ª–∏ (email —á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):",
                value="team@company.com, manager@company.com"
            )
            email_subject = st.text_input(
                "–¢–µ–º–∞ –ø–∏—Å—å–º–∞:",
                value=f"–ò—Ç–æ–≥–∏ –≤—Å—Ç—Ä–µ—á–∏: {active_meeting}"
            )
            include_attachments = st.checkbox("–í–∫–ª—é—á–∏—Ç—å –ø—Ä–æ—Ç–æ–∫–æ–ª –∫–∞–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ", True)
            
            if st.form_submit_button("üì§ –û—Ç–ø—Ä–∞–≤–∏—Ç—å –æ—Ç—á–µ—Ç"):
                st.success("–û—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º!")

if __name__ == "__main__":
    main()
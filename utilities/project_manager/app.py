"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞–º–∏
–ê–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–æ–≤ MS Project –∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è —Å —Å–∏—Å—Ç–µ–º–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∑–∞–¥–∞—á–∞–º–∏.
"""

import streamlit as st
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..'))

from shared.llm_client import llm_client
from shared.config import Config
from shared.utils import (
    create_streamlit_header, display_metrics, 
    validate_config, async_to_sync
)
from datetime import datetime, timedelta

def main():
    create_streamlit_header(
        "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞–º–∏", 
        "–ê–∫—Ç—É–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–Ω–æ–≤ MS Project –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞–º–∏"
    )
    
    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    with st.sidebar:
        st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        
        # –ü—Ä–æ–µ–∫—Ç
        selected_project = st.selectbox(
            "–¢–µ–∫—É—â–∏–π –ø—Ä–æ–µ–∫—Ç:",
            ["–ü—Ä–æ–µ–∫—Ç A", "–ü—Ä–æ–µ–∫—Ç B", "–ü—Ä–æ–µ–∫—Ç C", "–ù–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç"],
            index=0
        )
        
        # –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è
        methodology = st.selectbox(
            "–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è:",
            ["Agile", "Waterfall", "Kanban", "Scrum"],
            index=0
        )
        
        # –ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞
        report_period = st.selectbox(
            "–ü–µ—Ä–∏–æ–¥ –æ—Ç—á–µ—Ç–∞:",
            ["–¢–µ–∫—É—â–∞—è –Ω–µ–¥–µ–ª—è", "–¢–µ–∫—É—â–∏–π –º–µ—Å—è—Ü", "–ö–≤–∞—Ä—Ç–∞–ª"],
            index=0
        )
        
        if st.button("üîÑ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞—Ç—å", type="primary"):
            st.rerun()
    
    # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    tab1, tab2, tab3, tab4 = st.tabs([
        "üìä –î–∞—à–±–æ—Ä–¥", "üìã –ó–∞–¥–∞—á–∏", "üë• –†–µ—Å—É—Ä—Å—ã", "üìà –û—Ç—á–µ—Ç—ã"
    ])
    
    with tab1:
        st.subheader("üìä –û–±–∑–æ—Ä –ø—Ä–æ–µ–∫—Ç–∞")
        
        # –ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏
        col1, col2, col3, col4 = st.columns(4)
        
        with col1:
            st.metric("–ü—Ä–æ–≥—Ä–µ—Å—Å", "67%", "5%")
        with col2:
            st.metric("–ó–∞–¥–∞—á –≤—ã–ø–æ–ª–Ω–µ–Ω–æ", "34/51", "3")
        with col3:
            st.metric("–î–Ω–µ–π –¥–æ –¥–µ–¥–ª–∞–π–Ω–∞", "23", "-2")
        with col4:
            st.metric("–ë—é–¥–∂–µ—Ç", "85%", "-5%")
        
        # –°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞
        st.subheader("üéØ –°—Ç–∞—Ç—É—Å –ø—Ä–æ–µ–∫—Ç–∞")
        
        project_info = {
            "–ù–∞–∑–≤–∞–Ω–∏–µ": selected_project,
            "–°—Ç–∞—Ç—É—Å": "–í —Ä–∞–±–æ—Ç–µ",
            "–ù–∞—á–∞–ª–æ": "01.01.2024",
            "–û–∫–æ–Ω—á–∞–Ω–∏–µ": "31.03.2024",
            "–ö–æ–º–∞–Ω–¥–∞": "8 —á–µ–ª–æ–≤–µ–∫",
            "–ë—é–¥–∂–µ—Ç": "$50,000"
        }
        
        col1, col2 = st.columns(2)
        
        with col1:
            for key, value in list(project_info.items())[:3]:
                st.markdown(f"**{key}:** {value}")
        
        with col2:
            for key, value in list(project_info.items())[3:]:
                st.markdown(f"**{key}:** {value}")
        
        # –î–∏–∞–≥—Ä–∞–º–º–∞ –ì–∞–Ω—Ç–∞ (–∏–º–∏—Ç–∞—Ü–∏—è)
        st.subheader("üìÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è —à–∫–∞–ª–∞")
        
        import pandas as pd
        
        tasks_timeline = [
            {"–ó–∞–¥–∞—á–∞": "–ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ù–∞—á–∞–ª–æ": "2024-01-01", "–ö–æ–Ω–µ—Ü": "2024-01-15", "–ü—Ä–æ–≥—Ä–µ—Å—Å": 100},
            {"–ó–∞–¥–∞—á–∞": "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞", "–ù–∞—á–∞–ª–æ": "2024-01-16", "–ö–æ–Ω–µ—Ü": "2024-02-28", "–ü—Ä–æ–≥—Ä–µ—Å—Å": 70},
            {"–ó–∞–¥–∞—á–∞": "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ", "–ù–∞—á–∞–ª–æ": "2024-02-15", "–ö–æ–Ω–µ—Ü": "2024-03-15", "–ü—Ä–æ–≥—Ä–µ—Å—Å": 30},
            {"–ó–∞–¥–∞—á–∞": "–î–µ–ø–ª–æ–π", "–ù–∞—á–∞–ª–æ": "2024-03-16", "–ö–æ–Ω–µ—Ü": "2024-03-31", "–ü—Ä–æ–≥—Ä–µ—Å—Å": 0}
        ]
        
        df = pd.DataFrame(tasks_timeline)
        st.dataframe(df, use_container_width=True)
    
    with tab2:
        st.subheader("üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏")
        
        # –§–∏–ª—å—Ç—Ä—ã
        col1, col2, col3 = st.columns(3)
        
        with col1:
            status_filter = st.selectbox("–°—Ç–∞—Ç—É—Å:", ["–í—Å–µ", "–û—Ç–∫—Ä—ã—Ç–∞", "–í —Ä–∞–±–æ—Ç–µ", "–ó–∞–≤–µ—Ä—à–µ–Ω–∞"])
        with col2:
            priority_filter = st.selectbox("–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:", ["–í—Å–µ", "–í—ã—Å–æ–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–ù–∏–∑–∫–∏–π"])
        with col3:
            assignee_filter = st.text_input("–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:")
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏
        with st.expander("‚ûï –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –∑–∞–¥–∞—á—É"):
            with st.form("new_task"):
                task_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏:")
                task_description = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ:")
                task_assignee = st.selectbox("–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:", ["Dev A", "Dev B", "QA Engineer", "Designer"])
                task_priority = st.selectbox("–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:", ["–í—ã—Å–æ–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–ù–∏–∑–∫–∏–π"])
                task_due_date = st.date_input("–°—Ä–æ–∫:")
                
                if st.form_submit_button("–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É"):
                    if task_name:
                        st.success(f"–ó–∞–¥–∞—á–∞ '{task_name}' —Å–æ–∑–¥–∞–Ω–∞!")
        
        # –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á
        st.subheader("üìö –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á")
        
        tasks = [
            {"id": "PROJ-1", "name": "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ CI/CD", "assignee": "Dev A", "status": "–í —Ä–∞–±–æ—Ç–µ", "priority": "–í—ã—Å–æ–∫–∏–π"},
            {"id": "PROJ-2", "name": "–°–æ–∑–¥–∞–Ω–∏–µ API", "assignee": "Dev B", "status": "–ó–∞–≤–µ—Ä—à–µ–Ω–∞", "priority": "–í—ã—Å–æ–∫–∏–π"},
            {"id": "PROJ-3", "name": "–î–∏–∑–∞–π–Ω UI", "assignee": "Designer", "status": "–û—Ç–∫—Ä—ã—Ç–∞", "priority": "–°—Ä–µ–¥–Ω–∏–π"}
        ]
        
        for task in tasks:
            with st.expander(f"üìã {task['id']}: {task['name']}"):
                col1, col2 = st.columns([2, 1])
                
                with col1:
                    st.markdown(f"**–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å:** {task['assignee']}")
                    st.markdown(f"**–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:** {task['priority']}")
                    st.markdown(f"**–°—Ç–∞—Ç—É—Å:** {task['status']}")
                
                with col2:
                    if st.button(f"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", key=f"edit_{task['id']}"):
                        st.info("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ...")
                    if st.button(f"–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π", key=f"comment_{task['id']}"):
                        st.info("–î–æ–±–∞–≤–∏—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π...")
    
    with tab3:
        st.subheader("üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–∞–º–∏")
        
        # –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–µ–∫—Ç–∞
        st.subheader("üë• –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–æ–µ–∫—Ç–∞")
        
        team_members = [
            {"name": "–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤", "role": "Team Lead", "workload": "90%", "tasks": 5},
            {"name": "–ü–µ—Ç—Ä –ü–µ—Ç—Ä–æ–≤", "role": "Developer", "workload": "75%", "tasks": 3},
            {"name": "–ê–Ω–Ω–∞ –°–∏–¥–æ—Ä–æ–≤–∞", "role": "QA Engineer", "workload": "60%", "tasks": 4},
            {"name": "–ú–∞—Ä–∏—è –ö–æ–∑–ª–æ–≤–∞", "role": "Designer", "workload": "40%", "tasks": 2}
        ]
        
        for member in team_members:
            col1, col2, col3, col4 = st.columns([2, 1, 1, 1])
            
            with col1:
                st.write(f"üë§ **{member['name']}**")
                st.write(f"_{member['role']}_")
            with col2:
                workload = int(member['workload'].rstrip('%'))
                if workload > 80:
                    st.error(f"üî¥ {member['workload']}")
                elif workload > 60:
                    st.warning(f"üü° {member['workload']}")
                else:
                    st.success(f"üü¢ {member['workload']}")
            with col3:
                st.write(f"üìã {member['tasks']} –∑–∞–¥–∞—á")
            with col4:
                if st.button("üìä", key=f"details_{member['name']}"):
                    st.info(f"–î–µ—Ç–∞–ª–∏ –ø–æ {member['name']}")
        
        # –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤
        st.subheader("üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤")
        
        if st.button("üéØ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ"):
            st.success("–†–µ—Å—É—Ä—Å—ã –ø–µ—Ä–µ—Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–∏!")
    
    with tab4:
        st.subheader("üìà –û—Ç—á–µ—Ç—ã –ø–æ –ø—Ä–æ–µ–∫—Ç—É")
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞
        if st.button("üìä –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –æ—Ç—á–µ—Ç", type="primary"):
            with st.spinner("–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ç—á–µ—Ç–∞..."):
                
                project_data = f"""
                –ü—Ä–æ–µ–∫—Ç: {selected_project}
                –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è: {methodology}
                –ü–µ—Ä–∏–æ–¥: {report_period}
                
                –ü—Ä–æ–≥—Ä–µ—Å—Å: 67%
                –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞—á: 34 –∏–∑ 51
                –ö–æ–º–∞–Ω–¥–∞: 4 —á–µ–ª–æ–≤–µ–∫–∞
                –ë—é–¥–∂–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω: 85%
                """
                
                @async_to_sync
                async def generate_report():
                    return await llm_client.analyze_text(
                        project_data,
                        "–°–æ–∑–¥–∞–π –ø–æ–¥—Ä–æ–±–Ω—ã–π –æ—Ç—á–µ—Ç –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é –ø—Ä–æ–µ–∫—Ç–∞. "
                        "–í–∫–ª—é—á–∏ –∞–Ω–∞–ª–∏–∑ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞, —Ä–∏—Å–∫–æ–≤, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é."
                    )
                
                report = generate_report()
                
                st.subheader("üìÑ –û—Ç—á–µ—Ç –ø–æ –ø—Ä–æ–µ–∫—Ç—É")
                st.markdown(report)
        
        # –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–æ–≤
        st.subheader("üì§ –≠–∫—Å–ø–æ—Ä—Ç –æ—Ç—á–µ—Ç–æ–≤")
        
        col1, col2, col3 = st.columns(3)
        
        with col1:
            if st.button("üìä Excel –æ—Ç—á–µ—Ç"):
                st.success("Excel –æ—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!")
        
        with col2:
            if st.button("üìÑ PDF –æ—Ç—á–µ—Ç"):
                st.success("PDF –æ—Ç—á–µ—Ç —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω!")
        
        with col3:
            if st.button("üìß –û—Ç–ø—Ä–∞–≤–∏—Ç—å email"):
                st.success("–û—Ç—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –ø–æ email!")

if __name__ == "__main__":
    main()
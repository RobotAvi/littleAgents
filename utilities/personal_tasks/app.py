"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ª–∏—á–Ω—ã—Ö –ø–æ—Ä—É—á–µ–Ω–∏–π
–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏, –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏ –∏ –ª–∏—á–Ω–æ–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é.
"""

import streamlit as st
import sys
import os
sys.path.append(os.path.join(os.path.dirname(__file__), '..', '..'))

from shared.llm_client import llm_client
from shared.config import Config
from shared.utils import (
    create_streamlit_header, display_metrics, 
    validate_config, async_to_sync
)
from datetime import datetime, timedelta

def main():
    create_streamlit_header(
        "–õ–∏—á–Ω—ã–µ –ø–æ—Ä—É—á–µ–Ω–∏—è", 
        "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏ –∏ –ø–æ–≤—ã—à–µ–Ω–∏–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"
    )
    
    # –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
    with st.sidebar:
        st.header("‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏")
        
        # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–¥–∞—á
        task_categories = st.multiselect(
            "–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –∑–∞–¥–∞—á:",
            ["–†–∞–±–æ—Ç–∞", "–õ–∏—á–Ω–æ–µ", "–û–±—É—á–µ–Ω–∏–µ", "–ó–¥–æ—Ä–æ–≤—å–µ", "–§–∏–Ω–∞–Ω—Å—ã", "–•–æ–±–±–∏"],
            default=["–†–∞–±–æ—Ç–∞", "–õ–∏—á–Ω–æ–µ"]
        )
        
        # –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç
        priority_filter = st.selectbox(
            "–ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç:",
            ["–í—Å–µ", "–í—ã—Å–æ–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–ù–∏–∑–∫–∏–π"],
            index=0
        )
        
        # –°—Ç–∞—Ç—É—Å
        status_filter = st.selectbox(
            "–°—Ç–∞—Ç—É—Å –∑–∞–¥–∞—á:",
            ["–í—Å–µ", "–ê–∫—Ç–∏–≤–Ω—ã–µ", "–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã–µ", "–û—Ç–ª–æ–∂–µ–Ω–Ω—ã–µ"],
            index=1
        )
        
        if st.button("üîÑ –û–±–Ω–æ–≤–∏—Ç—å", type="primary"):
            st.rerun()
    
    # –û—Å–Ω–æ–≤–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
    tab1, tab2, tab3, tab4 = st.tabs([
        "üìã –ó–∞–¥–∞—á–∏", "‚è∞ –ö–∞–ª–µ–Ω–¥–∞—Ä—å", "üìä –ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å", "ü§ñ –ò–ò –ü–æ–º–æ—â–Ω–∏–∫"
    ])
    
    with tab1:
        st.subheader("üìã –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∞–º–∏")
        
        # –ë—ã—Å—Ç—Ä–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
        with st.form("quick_task"):
            st.subheader("‚ûï –ë—ã—Å—Ç—Ä–æ –¥–æ–±–∞–≤–∏—Ç—å –∑–∞–¥–∞—á—É")
            
            col1, col2 = st.columns([3, 1])
            
            with col1:
                task_text = st.text_input("–ß—Ç–æ –Ω—É–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å?", placeholder="–ù–∞–ø—Ä–∏–º–µ—Ä: –ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã")
            
            with col2:
                if st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å", use_container_width=True):
                    if task_text:
                        st.success(f"–ó–∞–¥–∞—á–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∞: {task_text}")
        
        # –°–ø–∏—Å–æ–∫ –∑–∞–¥–∞—á –Ω–∞ —Å–µ–≥–æ–¥–Ω—è
        st.subheader("üìÖ –ó–∞–¥–∞—á–∏ –Ω–∞ —Å–µ–≥–æ–¥–Ω—è")
        
        today_tasks = [
            {"id": 1, "text": "–í—Å—Ç—Ä–µ—á–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π", "time": "10:00", "priority": "–í—ã—Å–æ–∫–∏–π", "category": "–†–∞–±–æ—Ç–∞", "done": False},
            {"id": 2, "text": "–ö—É–ø–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã", "time": "18:00", "priority": "–°—Ä–µ–¥–Ω–∏–π", "category": "–õ–∏—á–Ω–æ–µ", "done": False},
            {"id": 3, "text": "–ü—Ä–æ—á–∏—Ç–∞—Ç—å —Å—Ç–∞—Ç—å—é –ø–æ ML", "time": "20:00", "priority": "–ù–∏–∑–∫–∏–π", "category": "–û–±—É—á–µ–Ω–∏–µ", "done": True}
        ]
        
        for task in today_tasks:
            col1, col2, col3, col4 = st.columns([1, 3, 1, 1])
            
            with col1:
                done = st.checkbox("", value=task["done"], key=f"task_{task['id']}")
                if done != task["done"]:
                    st.success("–ó–∞–¥–∞—á–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!")
            
            with col2:
                if task["done"]:
                    st.markdown(f"~~{task['text']}~~")
                else:
                    st.markdown(f"**{task['text']}**")
                st.caption(f"{task['time']} | {task['category']}")
            
            with col3:
                priority_color = {"–í—ã—Å–æ–∫–∏–π": "üî¥", "–°—Ä–µ–¥–Ω–∏–π": "üü°", "–ù–∏–∑–∫–∏–π": "üü¢"}
                st.write(f"{priority_color[task['priority']]}")
            
            with col4:
                if st.button("‚úèÔ∏è", key=f"edit_{task['id']}"):
                    st.info("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏...")
        
        # –î–µ—Ç–∞–ª—å–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏
        with st.expander("üìù –î–æ–±–∞–≤–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∑–∞–¥–∞—á—É"):
            with st.form("detailed_task"):
                col1, col2 = st.columns(2)
                
                with col1:
                    detailed_task_text = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ –∑–∞–¥–∞—á–∏:")
                    task_category = st.selectbox("–ö–∞—Ç–µ–≥–æ—Ä–∏—è:", ["–†–∞–±–æ—Ç–∞", "–õ–∏—á–Ω–æ–µ", "–û–±—É—á–µ–Ω–∏–µ", "–ó–¥–æ—Ä–æ–≤—å–µ", "–§–∏–Ω–∞–Ω—Å—ã", "–•–æ–±–±–∏"])
                    task_priority = st.selectbox("–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç:", ["–í—ã—Å–æ–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–ù–∏–∑–∫–∏–π"])
                
                with col2:
                    task_due_date = st.date_input("–°—Ä–æ–∫ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è:")
                    task_due_time = st.time_input("–í—Ä–µ–º—è:")
                    task_reminder = st.selectbox("–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ:", ["–ù–µ—Ç", "–ó–∞ 15 –º–∏–Ω", "–ó–∞ —á–∞—Å", "–ó–∞ –¥–µ–Ω—å"])
                
                task_description = st.text_area("–û–ø–∏—Å–∞–Ω–∏–µ/–∑–∞–º–µ—Ç–∫–∏:")
                task_tags = st.text_input("–¢–µ–≥–∏ (—á–µ—Ä–µ–∑ –∑–∞–ø—è—Ç—É—é):")
                
                if st.form_submit_button("–°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É"):
                    if detailed_task_text:
                        st.success(f"–ü–æ–¥—Ä–æ–±–Ω–∞—è –∑–∞–¥–∞—á–∞ '{detailed_task_text}' —Å–æ–∑–¥–∞–Ω–∞!")
    
    with tab2:
        st.subheader("‚è∞ –ö–∞–ª–µ–Ω–¥–∞—Ä—å –∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ")
        
        # –í—ã–±–æ—Ä –¥–∞—Ç—ã
        selected_date = st.date_input("–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É:", datetime.now().date())
        
        # –°–æ–±—ã—Ç–∏—è –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—É—é –¥–∞—Ç—É
        st.subheader(f"üìÖ –ü–ª–∞–Ω –Ω–∞ {selected_date.strftime('%d.%m.%Y')}")
        
        daily_events = [
            {"time": "09:00", "event": "–£—Ç—Ä–µ–Ω–Ω—è—è –∑–∞—Ä—è–¥–∫–∞", "type": "–ó–¥–æ—Ä–æ–≤—å–µ", "duration": "30 –º–∏–Ω"},
            {"time": "10:00", "event": "–í—Å—Ç—Ä–µ—á–∞ —Å –∫–æ–º–∞–Ω–¥–æ–π", "type": "–†–∞–±–æ—Ç–∞", "duration": "1 —á–∞—Å"},
            {"time": "14:00", "event": "–û–±–µ–¥", "type": "–õ–∏—á–Ω–æ–µ", "duration": "1 —á–∞—Å"},
            {"time": "16:00", "event": "–ö–æ–¥-—Ä–µ–≤—å—é", "type": "–†–∞–±–æ—Ç–∞", "duration": "2 —á–∞—Å–∞"},
            {"time": "19:00", "event": "–ò–∑—É—á–µ–Ω–∏–µ Python", "type": "–û–±—É—á–µ–Ω–∏–µ", "duration": "1 —á–∞—Å"}
        ]
        
        for event in daily_events:
            col1, col2, col3 = st.columns([1, 3, 1])
            
            with col1:
                st.write(f"**{event['time']}**")
            with col2:
                st.write(f"üìå {event['event']}")
                st.caption(f"{event['type']} ‚Ä¢ {event['duration']}")
            with col3:
                if st.button("‚úèÔ∏è", key=f"edit_event_{event['time']}"):
                    st.info("–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è...")
        
        # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è
        with st.expander("‚ûï –î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ"):
            with st.form("add_event"):
                col1, col2 = st.columns(2)
                
                with col1:
                    event_name = st.text_input("–ù–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è:")
                    event_date = st.date_input("–î–∞—Ç–∞:")
                    event_time = st.time_input("–í—Ä–µ–º—è:")
                
                with col2:
                    event_duration = st.number_input("–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å (–º–∏–Ω):", min_value=15, value=60)
                    event_type = st.selectbox("–¢–∏–ø:", ["–†–∞–±–æ—Ç–∞", "–õ–∏—á–Ω–æ–µ", "–û–±—É—á–µ–Ω–∏–µ", "–ó–¥–æ—Ä–æ–≤—å–µ"])
                    event_reminder = st.checkbox("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ")
                
                if st.form_submit_button("–î–æ–±–∞–≤–∏—Ç—å —Å–æ–±—ã—Ç–∏–µ"):
                    if event_name:
                        st.success(f"–°–æ–±—ã—Ç–∏–µ '{event_name}' –¥–æ–±–∞–≤–ª–µ–Ω–æ!")
    
    with tab3:
        st.subheader("üìä –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
        
        # –ú–µ—Ç—Ä–∏–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        col1, col2, col3, col4 = st.columns(4)
        
        with col1:
            st.metric("–ó–∞–¥–∞—á —Å–µ–≥–æ–¥–Ω—è", "8", "2")
        with col2:
            st.metric("–í—ã–ø–æ–ª–Ω–µ–Ω–æ", "5", "1")
        with col3:
            st.metric("% –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è", "63%", "12%")
        with col4:
            st.metric("–ü—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ–µ –≤—Ä–µ–º—è", "6.5—á", "0.5—á")
        
        # –ì—Ä–∞—Ñ–∏–∫ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        st.subheader("üìà –î–∏–Ω–∞–º–∏–∫–∞ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
        
        import pandas as pd
        import plotly.express as px
        
        # –°–∏–º—É–ª—è—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        days = ['–ü–Ω', '–í—Ç', '–°—Ä', '–ß—Ç', '–ü—Ç', '–°–±', '–í—Å']
        productivity_data = pd.DataFrame({
            '–î–µ–Ω—å': days,
            '–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞—á': [8, 6, 9, 7, 5, 3, 4],
            '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ': [10, 8, 11, 9, 8, 5, 6]
        })
        
        fig = px.bar(productivity_data, x='–î–µ–Ω—å', y=['–í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞—á', '–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–æ'],
                    title="–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–¥–∞—á –ø–æ –¥–Ω—è–º –Ω–µ–¥–µ–ª–∏", barmode='group')
        st.plotly_chart(fig, use_container_width=True)
        
        # –ê–Ω–∞–ª–∏–∑ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        st.subheader("‚è∞ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏")
        
        time_distribution = pd.DataFrame({
            '–ö–∞—Ç–µ–≥–æ—Ä–∏—è': ['–†–∞–±–æ—Ç–∞', '–õ–∏—á–Ω–æ–µ', '–û–±—É—á–µ–Ω–∏–µ', '–ó–¥–æ—Ä–æ–≤—å–µ', '–û—Ç–¥—ã—Ö'],
            '–í—Ä–µ–º—è (—á–∞—Å—ã)': [8, 2, 1.5, 1, 3]
        })
        
        fig_pie = px.pie(time_distribution, values='–í—Ä–µ–º—è (—á–∞—Å—ã)', names='–ö–∞—Ç–µ–≥–æ—Ä–∏—è',
                        title="–ö–∞–∫ –ø—Ä–æ–≤–æ–¥–∏—Ç—Å—è –≤—Ä–µ–º—è")
        st.plotly_chart(fig_pie, use_container_width=True)
        
        # –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        st.subheader("üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –Ω–µ–¥–µ–ª–∏")
        
        weekly_stats = {
            "–í—Å–µ–≥–æ –∑–∞–¥–∞—á": 52,
            "–í—ã–ø–æ–ª–Ω–µ–Ω–æ": 38,
            "–ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ": 3,
            "–û—Ç–ª–æ–∂–µ–Ω–æ": 11,
            "–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –¥–Ω—è": 7.8,
            "–°–∞–º—ã–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–π –¥–µ–Ω—å": "–°—Ä–µ–¥–∞",
            "–û—Å–Ω–æ–≤–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è": "–†–∞–±–æ—Ç–∞ (65%)"
        }
        
        for key, value in weekly_stats.items():
            st.markdown(f"**{key}:** {value}")
    
    with tab4:
        st.subheader("ü§ñ –ò–ò –ü–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
        
        # –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
        if st.button("üìä –ê–Ω–∞–ª–∏–∑ –º–æ–µ–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏", type="primary"):
            with st.spinner("–ê–Ω–∞–ª–∏–∑ –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏..."):
                
                productivity_data = """
                –î–∞–Ω–Ω—ã–µ –æ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∑–∞ –Ω–µ–¥–µ–ª—é:
                
                –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞–¥–∞—á: 38 –∏–∑ 52 (73%)
                –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–æ: 3 –∑–∞–¥–∞—á–∏
                –°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –¥–Ω—è: 7.8/10
                
                –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏:
                - –†–∞–±–æ—Ç–∞: 8 —á–∞—Å–æ–≤ (53%)
                - –õ–∏—á–Ω–æ–µ: 2 —á–∞—Å–∞ (13%)
                - –û–±—É—á–µ–Ω–∏–µ: 1.5 —á–∞—Å–∞ (10%)
                - –ó–¥–æ—Ä–æ–≤—å–µ: 1 —á–∞—Å (7%)
                - –û—Ç–¥—ã—Ö: 3 —á–∞—Å–∞ (20%)
                
                –°–∞–º—ã–µ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω—ã–µ –¥–Ω–∏: –°—Ä–µ–¥–∞, –ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫
                –ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏: –ü—Ä–æ—Å—Ä–æ—á–µ–Ω–Ω—ã–µ –∑–∞–¥–∞—á–∏, –º–∞–ª–æ –≤—Ä–µ–º–µ–Ω–∏ –Ω–∞ –æ–±—É—á–µ–Ω–∏–µ
                """
                
                @async_to_sync
                async def analyze_productivity():
                    return await llm_client.analyze_text(
                        productivity_data,
                        "–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. "
                        "–í—ã–¥–µ–ª–∏ —Å–∏–ª—å–Ω—ã–µ —Å—Ç–æ—Ä–æ–Ω—ã, –ø—Ä–æ–±–ª–µ–º—ã –∏ –¥–∞–π —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —É–ª—É—á—à–µ–Ω–∏—é."
                    )
                
                analysis = analyze_productivity()
                
                st.subheader("üìù –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–¥—É–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")
                st.markdown(analysis)
        
        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–ª–∞–Ω–∞ –¥–Ω—è
        st.subheader("üìÖ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–Ω—è")
        
        with st.form("generate_plan"):
            col1, col2 = st.columns(2)
            
            with col1:
                plan_date = st.date_input("–î–∞—Ç–∞ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è:")
                work_hours = st.number_input("–†–∞–±–æ—á–∏—Ö —á–∞—Å–æ–≤:", min_value=1, max_value=12, value=8)
                
            with col2:
                energy_level = st.selectbox("–£—Ä–æ–≤–µ–Ω—å —ç–Ω–µ—Ä–≥–∏–∏:", ["–í—ã—Å–æ–∫–∏–π", "–°—Ä–µ–¥–Ω–∏–π", "–ù–∏–∑–∫–∏–π"])
                focus_areas = st.multiselect("–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –æ–±–ª–∞—Å—Ç–∏:", ["–†–∞–±–æ—Ç–∞", "–õ–∏—á–Ω–æ–µ", "–û–±—É—á–µ–Ω–∏–µ", "–ó–¥–æ—Ä–æ–≤—å–µ"])
            
            if st.form_submit_button("ü§ñ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–ª–∞–Ω –¥–Ω—è"):
                st.success("–ü–ª–∞–Ω –¥–Ω—è —Å–æ–∑–¥–∞–Ω!")
                
                sample_plan = f"""
                **–ü–ª–∞–Ω –Ω–∞ {plan_date.strftime('%d.%m.%Y')}**
                
                üåÖ **–£—Ç—Ä–æ (9:00-12:00)**
                - –°–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ —Ä–∞–±–æ—á–∏–µ –∑–∞–¥–∞—á–∏ (–≤—ã—Å–æ–∫–∞—è –∫–æ–Ω—Ü–µ–Ω—Ç—Ä–∞—Ü–∏—è)
                - –ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–µ –ø—Ä–æ–µ–∫—Ç—ã
                
                üåû **–î–µ–Ω—å (12:00-15:00)**  
                - –í—Å—Ç—Ä–µ—á–∏ –∏ –∫–æ–º–º—É–Ω–∏–∫–∞—Ü–∏—è
                - –ú–µ–Ω–µ–µ —Å–ª–æ–∂–Ω—ã–µ –∑–∞–¥–∞—á–∏
                
                üåÜ **–í–µ—á–µ—Ä (15:00-18:00)**
                - –ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ç–µ–∫—É—â–∏—Ö –¥–µ–ª
                - –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞ –∑–∞–≤—Ç—Ä–∞
                - –û–±—É—á–µ–Ω–∏–µ –∏–ª–∏ –ª–∏—á–Ω—ã–µ –∑–∞–¥–∞—á–∏
                """
                
                st.markdown(sample_plan)

if __name__ == "__main__":
    main()